{
    "swagger": "2.0",
    "info": {
        "description": "This is the documentation of Configurator API .\n",
        "version": "1.0.0",
        "title": "Configurator API",
        "contact": {
            "name": "Gabriele Gualandi",
            "email": "gualandi@di.uniroma1.it"
        }
    },
    "basePath": "/api/configurator/v1",
    "schemes": [
        "http",
        "https"
    ],
    "paths": {
        "/vms": {
            "get": {
                "summary": "Retrieve VMS",
                "description": "Allows to Get the set of VMs that are currently present in the Configurator Cluster.",
                "operationId": "getVMS",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "vmType",
                        "description": "VM Type to filter by",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "containerized",
                                "non-containerized",
                                "fresh"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VM"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid vmType value"
                    }
                }
            }
        },
        "/vms/{vmID}": {
            "get": {
                "summary": "Find VM by ID",
                "description": "Allows to Get the details of the created VMs",
                "operationId": "getVMById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vmID",
                        "description": "ID of VM that needs to be fetched",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/VM"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "VM not found"
                    }
                }
            },
            "put": {
                "summary": "Update the details of a VM",
                "description": "Allows to Edit the details of the created VMs",
                "operationId": "updateVM",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vmID",
                        "description": "ID of VM that needs to be updated",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated type of the VM",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VM"
                            }
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "delete": {
                "summary": "Deletes a VM",
                "description": "",
                "operationId": "deleteVM",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vmID",
                        "description": "VM id to delete",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid VM value"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        },
        "/nodes": {
            "get": {
                "summary": "Retrieve Nodes",
                "description": "Allows to Get information on the set of Nodes currently maintained by the Configurator cluster.",
                "operationId": "getNodes",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Node"
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a Node",
                "operationId": "createNode",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created node object",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Node"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/nodes/{nodeID}": {
            "get": {
                "summary": "Find Node by ID",
                "description": "Allows to Get the details for a specific Node",
                "operationId": "getNodeById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "nodeID",
                        "description": "ID of Node that needs to be fetched",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Node"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Node not found"
                    }
                }
            },
            "put": {
                "summary": "Update the details of a Node",
                "description": "Allows to Edit the details of the created Node",
                "operationId": "updateNode",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "nodeID",
                        "description": "ID of Node that needs to be updated",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated type of the Node",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Node"
                            }
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "delete": {
                "summary": "Removes a Node",
                "description": "",
                "operationId": "deleteNode",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "nodeID",
                        "description": "Node id to delete",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid Node value"
                    },
                    "404": {
                        "description": "Node not found"
                    }
                }
            }
        },
        "/services": {
            "get": {
                "summary": "Retrieve Services",
                "description": "Allows to Get information on the set of containerized Services currently deployed by the Configurator.",
                "operationId": "getServices",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Service"
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a Service",
                "operationId": "createService",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created service object",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Service"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/services/{serviceID}": {
            "get": {
                "summary": "Find Service by ID",
                "description": "Allows to Get the details for a specific Service",
                "operationId": "getServiceById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceID",
                        "description": "ID of Service that needs to be fetched",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Service"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Service not found"
                    }
                }
            },
            "put": {
                "summary": "Update the details of a Service",
                "description": "Allows to Edit the details of the created Service",
                "operationId": "updateService",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceID",
                        "description": "ID of Service that needs to be updated",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated type of the Service",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Service"
                            }
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "delete": {
                "summary": "Un-deplay a Service from the cluster",
                "description": "",
                "operationId": "deleteService",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceID",
                        "description": "Service id to delete",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid Node value"
                    },
                    "404": {
                        "description": "Node not found"
                    }
                }
            }
        }
    },
    "definitions": {
        "VM": {
            "type": "object",
            "required": [
                "vmID",
                "vmType",
                "confID"
            ],
            "properties": {
                "vmID": {
                    "type": "integer",
                    "description": "the identifier of a VM (“external identifier”)"
                },
                "vmType": {
                    "type": "string",
                    "description": "Specifies the type of VM"
                },
                "confID": {
                    "type": "string",
                    "description": "is the identifier of the configuration (stored on the Configuration"
                }
            }
        },
        "Node": {
            "type": "object",
            "required": [
                "vmID",
                "nodeID",
                "label"
            ],
            "properties": {
                "vmID": {
                    "type": "integer",
                    "description": "refers to a VM (“external ID”) previously configured as \"containerized\""
                },
                "nodeID": {
                    "type": "integer",
                    "description": "the identifier assigned by the Configurator to the Node"
                },
                "label": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "a list of labels associated to the Node"
                }
            }
        },
        "Service": {
            "type": "object",
            "required": [
                "serviceID",
                "nodeID"
            ],
            "properties": {
                "serviceID": {
                    "type": "integer",
                    "description": "An identifier assigned from the Configurator to an instance of Service currently deployed"
                },
                "nodeID": {
                    "type": "integer",
                    "description": "Associated Node"
                }
            }
        }
    }
}