{
  "swagger": "2.0",
  "info": {
    "title": "SUNFISH IWM",
    "version": 0.1
  },
  "paths": {
    "/api-auth/password/": {
      "post": {
        "description": "Api view loosely based on DRF's default ObtainAuthToken,\nbut with the responses formats and status codes aligned with BasicAuthentication behavior.\n\nValid request example:\n\n.. code-block:: http\n\nPOST /api-auth/password/ HTTP/1.1",
        "parameters": [],
        "tags": [
          "api-auth"
        ],
        "summary": "Api view loosely based on DRF's default ObtainAuthToken,",
        "operationId": "password_create",
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/customer-permissions-log/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "role",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "user",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "user_url",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "username",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "full_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "native_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "o",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_url",
            "in": "query"
          }
        ],
        "operationId": "customer-permissions-log_list"
      }
    },
    "/api/customer-permissions-log/{id}/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "id",
            "in": "path"
          }
        ],
        "operationId": "customer-permissions-log_read"
      }
    },
    "/api/customer-permissions/": {
      "get": {
        "description": "Each customer is associated with a group of users that represent customer owners. The link is maintained\nthrough **api/customer-permissions/** endpoint.\n\nTo list all visible links, run a **GET** query against a list.\nResponse will contain a list of customer owners and their brief data.\n\nTo add a new user to the customer, **POST** a new relationship to **customer-permissions** endpoint:\n\n.. code-block:: http\n\n    POST /api/customer-permissions/ HTTP/1.1\n    Accept: application/json\n    Authorization: Token 95a688962bf68678fd4c8cec4d138ddd9493c93b\n    Host: example.com\n\n    {\n        \"customer\": \"http://example.com/api/customers/6c9b01c251c24174a6691a1f894fae31/\",\n        \"role\": \"owner\",\n        \"user\": \"http://example.com/api/users/82cec6c8e0484e0ab1429412fe4194b7/\"\n    }",
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "role",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "user",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "user_url",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "username",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "full_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "native_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "o",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_url",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "Each customer is associated with a group of users that represent customer owners. The link is maintained",
        "operationId": "customer-permissions_list",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "- Customers are connected to users through roles, whereas user may have role \"customer owner\".\n- Each customer may have multiple owners, and each user may own multiple customers.\n- Staff members can list all available customers and create new customers.\n- Customer owners can list all customers they own. Customer owners can also create new customers.\n- Project administrators can list all the customers that own any of the projects they are administrators in.\n- Project managers can list all the customers that own any of the projects they are managers in.",
        "parameters": [
          {
            "schema": {
              "required": [
                "role",
                "customer",
                "user"
              ],
              "type": "object",
              "properties": {
                "customer": {
                  "type": "string",
                  "description": ""
                },
                "expiration_time": {
                  "type": "string",
                  "description": ""
                },
                "role": {
                  "type": "string",
                  "description": ""
                },
                "user": {
                  "type": "string",
                  "description": ""
                },
                "created_by": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "- Customers are connected to users through roles, whereas user may have role \"customer owner\".",
        "operationId": "customer-permissions_create",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/customer-permissions/{id}/": {
      "get": {
        "description": "To remove a user from a customer owner group, delete corresponding connection (**url** field).\nSuccessful deletion will return status code 204.\n\n.. code-block:: http\n\n    DELETE /api/customer-permissions/71/ HTTP/1.1\n    Authorization: Token 95a688962bf68678fd4c8cec4d138ddd9493c93b\n    Host: example.com",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To remove a user from a customer owner group, delete corresponding connection (**url** field).",
        "operationId": "customer-permissions_read",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "- Customers are connected to users through roles, whereas user may have role \"customer owner\".\n- Each customer may have multiple owners, and each user may own multiple customers.\n- Staff members can list all available customers and create new customers.\n- Customer owners can list all customers they own. Customer owners can also create new customers.\n- Project administrators can list all the customers that own any of the projects they are administrators in.\n- Project managers can list all the customers that own any of the projects they are managers in.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "expiration_time": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "- Customers are connected to users through roles, whereas user may have role \"customer owner\".",
        "operationId": "customer-permissions_update",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "patch": {
        "description": "- Customers are connected to users through roles, whereas user may have role \"customer owner\".\n- Each customer may have multiple owners, and each user may own multiple customers.\n- Staff members can list all available customers and create new customers.\n- Customer owners can list all customers they own. Customer owners can also create new customers.\n- Project administrators can list all the customers that own any of the projects they are administrators in.\n- Project managers can list all the customers that own any of the projects they are managers in.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "expiration_time": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "- Customers are connected to users through roles, whereas user may have role \"customer owner\".",
        "operationId": "customer-permissions_partial_update",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "- Customers are connected to users through roles, whereas user may have role \"customer owner\".\n- Each customer may have multiple owners, and each user may own multiple customers.\n- Staff members can list all available customers and create new customers.\n- Customer owners can list all customers they own. Customer owners can also create new customers.\n- Project administrators can list all the customers that own any of the projects they are administrators in.\n- Project managers can list all the customers that own any of the projects they are managers in.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "- Customers are connected to users through roles, whereas user may have role \"customer owner\".",
        "operationId": "customer-permissions_delete",
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/customers/": {
      "get": {
        "description": "To get a list of customers, run GET against */api/customers/* as authenticated user. Note that a user can\nonly see connected customers:\n\n- customers that the user owns\n- customers that have a project where user has a role\n\nStaff also can filter customers by user UUID, for example /api/customers/?user_uuid=<UUID>",
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "abbreviation",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "contact_details",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "native_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "registration_code",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "o",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To get a list of customers, run GET against */api/customers/* as authenticated user. Note that a user can",
        "operationId": "customers_list",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "A new customer can only be created by users with staff privilege (is_staff=True).\nExample of a valid request:\n\n.. code-block:: http\n\n    POST /api/customers/ HTTP/1.1\n    Content-Type: application/json\n    Accept: application/json\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com\n\n    {\n        \"name\": \"Customer A\",\n        \"native_name\": \"Customer A\",\n        \"abbreviation\": \"CA\",\n        \"contact_details\": \"Luhamaa 28, 10128 Tallinn\",\n    }",
        "parameters": [
          {
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "contact_details": {
                  "type": "string",
                  "description": ""
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "country": {
                  "type": "string",
                  "description": ""
                },
                "abbreviation": {
                  "type": "string",
                  "description": ""
                },
                "native_name": {
                  "type": "string",
                  "description": ""
                },
                "vat_code": {
                  "type": "string",
                  "description": "VAT number"
                },
                "registration_code": {
                  "type": "string",
                  "description": ""
                },
                "is_company": {
                  "type": "boolean",
                  "description": "Is company or private person"
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "A new customer can only be created by users with staff privilege (is_staff=True).",
        "operationId": "customers_create",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/customers/{uuid}/": {
      "get": {
        "description": "Optional `field` query parameter (can be list) allows to limit what fields are returned.\nFor example, given request /api/customers/<uuid>/?field=uuid&field=name you get response like this:\n\n.. code-block:: javascript\n\n    {\n        \"uuid\": \"90bcfe38b0124c9bbdadd617b5d739f5\",\n        \"name\": \"Ministry of Bells\"\n    }",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "Optional `field` query parameter (can be list) allows to limit what fields are returned.",
        "operationId": "customers_read",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "contact_details": {
                  "type": "string",
                  "description": ""
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "country": {
                  "type": "string",
                  "description": ""
                },
                "abbreviation": {
                  "type": "string",
                  "description": ""
                },
                "native_name": {
                  "type": "string",
                  "description": ""
                },
                "vat_code": {
                  "type": "string",
                  "description": "VAT number"
                },
                "registration_code": {
                  "type": "string",
                  "description": ""
                },
                "is_company": {
                  "type": "boolean",
                  "description": "Is company or private person"
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "customers_update"
      },
      "patch": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "contact_details": {
                  "type": "string",
                  "description": ""
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "country": {
                  "type": "string",
                  "description": ""
                },
                "abbreviation": {
                  "type": "string",
                  "description": ""
                },
                "native_name": {
                  "type": "string",
                  "description": ""
                },
                "vat_code": {
                  "type": "string",
                  "description": "VAT number"
                },
                "registration_code": {
                  "type": "string",
                  "description": ""
                },
                "is_company": {
                  "type": "boolean",
                  "description": "Is company or private person"
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "customers_partial_update"
      },
      "delete": {
        "description": "Deletion of a customer is done through sending a **DELETE** request to the customer instance URI. Please note,\nthat if a customer has connected projects, deletion request will fail with 409 response code.\n\nValid request example (token is user specific):\n\n.. code-block:: http\n\n    DELETE /api/customers/6c9b01c251c24174a6691a1f894fae31/ HTTP/1.1\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "Deletion of a customer is done through sending a **DELETE** request to the customer instance URI. Please note,",
        "operationId": "customers_delete",
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/customers/{uuid}/balance_history/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "customers_balance_history_read"
      }
    },
    "/api/customers/{uuid}/counters/": {
      "get": {
        "description": "Count number of entities related to customer\n\n.. code-block:: javascript\n\n{\n\"alerts\": 12,\n\"services\": 1,\n\"projects\": 1,\n\"users\": 3\n}",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "Count number of entities related to customer",
        "operationId": "customers_counters_list",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/customers/{uuid}/image/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          }
        ],
        "operationId": "customers_image_list"
      },
      "put": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "image"
              ],
              "type": "object",
              "properties": {
                "image": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "customers_image_update"
      },
      "patch": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "image": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "customers_image_partial_update"
      },
      "delete": {
        "tags": [
          "api"
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "customers_image_delete"
      }
    },
    "/api/customers/{uuid}/users/": {
      "get": {
        "description": "A list of users connected to the customer",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "A list of users connected to the customer",
        "operationId": "customers_users_read",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/events/": {
      "get": {
        "description": "To get a list of events - run **GET** against */api/events/* as authenticated user. Note that a user can\nonly see events connected to objects she is allowed to see.\n\nSorting is supported in ascending and descending order by specifying a field to an **?o=** parameter. By default\nevents are sorted by @timestamp in descending order.\n\nRun POST against */api/events/* to create an event. Only users with staff privileges can create events.\nNew event will be emitted with `custom_notification` event type.\nRequest should contain following fields:\n\n- level: the level of current event. Following levels are supported: debug, info, warning, error\n- message: string representation of event message\n- scope: optional URL, which points to the loggable instance\n\nRequest example:\n\n.. code-block:: javascript\n\n    POST /api/events/\n    Accept: application/json\n    Content-Type: application/json\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com\n\n    {\n        \"level\": \"info\",\n        \"message\": \"message#1\",\n        \"scope\": \"http://example.com/api/customers/9cd869201e1b4158a285427fcd790c1c/\"\n    }",
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To get a list of events - run **GET** against */api/events/* as authenticated user. Note that a user can",
        "operationId": "events_list",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "schema": {
              "required": [
                "level",
                "message"
              ],
              "type": "object",
              "properties": {
                "scope": {
                  "type": "string",
                  "description": ""
                },
                "message": {
                  "type": "string",
                  "description": ""
                },
                "level": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "events_create"
      }
    },
    "/api/events/count/": {
      "get": {
        "description": "To get a count of events - run **GET** against */api/events/count/* as authenticated user.\nEndpoint support same filters as events list.\n\nResponse example:\n\n.. code-block:: javascript\n\n    {\"count\": 12321}",
        "parameters": [],
        "tags": [
          "api"
        ],
        "summary": "To get a count of events - run **GET** against */api/events/count/* as authenticated user.",
        "operationId": "events_count_read",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/events/event_groups/": {
      "get": {
        "description": "Returns a list of groups with event types.\nGroup is used in exclude_features query param.",
        "parameters": [],
        "tags": [
          "api"
        ],
        "summary": "Returns a list of groups with event types.",
        "operationId": "events_event_groups_read",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/events/scope_types/": {
      "get": {
        "description": "Returns a list of scope types acceptable by events filter.",
        "parameters": [],
        "tags": [
          "api"
        ],
        "summary": "Returns a list of scope types acceptable by events filter.",
        "operationId": "events_scope_types_read",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/hooks-email/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "user",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "is_active",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "last_published",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "email",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "author_uuid",
            "in": "query"
          }
        ],
        "operationId": "hooks-email_list"
      },
      "post": {
        "description": "To create new email hook issue **POST** against */api/hooks-email/* as an authenticated user.\nYou should specify list of event_types or event_groups.\n\nExample of a request:\n\n.. code-block:: http\n\n    POST /api/hooks-email/ HTTP/1.1\n    Content-Type: application/json\n    Accept: application/json\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com\n\n    {\n        \"event_types\": [\"openstack_instance_start_succeeded\"],\n        \"event_groups\": [\"users\"],\n        \"email\": \"test@example.com\"\n    }\n\nYou may temporarily disable hook without deleting it by issuing following **PATCH** request against hook URL:\n\n.. code-block:: javascript\n\n    {\n        \"is_active\": \"false\"\n    }",
        "parameters": [
          {
            "schema": {
              "required": [
                "email"
              ],
              "type": "object",
              "properties": {
                "event_groups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "is_active": {
                  "type": "boolean",
                  "description": ""
                },
                "event_types": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "email": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To create new email hook issue **POST** against */api/hooks-email/* as an authenticated user.",
        "operationId": "hooks-email_create",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/hooks-email/{uuid}/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "hooks-email_read"
      },
      "put": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "email"
              ],
              "type": "object",
              "properties": {
                "event_groups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "is_active": {
                  "type": "boolean",
                  "description": ""
                },
                "event_types": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "email": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "hooks-email_update"
      },
      "patch": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "event_groups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "is_active": {
                  "type": "boolean",
                  "description": ""
                },
                "event_types": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "email": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "hooks-email_partial_update"
      },
      "delete": {
        "tags": [
          "api"
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "hooks-email_delete"
      }
    },
    "/api/hooks-push/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "user",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "is_active",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "last_published",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "type",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "device_id",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "device_manufacturer",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "device_model",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "token",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "author_uuid",
            "in": "query"
          }
        ],
        "operationId": "hooks-push_list"
      },
      "post": {
        "description": "To create new push hook issue **POST** against */api/hooks-push/* as an authenticated user.\nYou should specify list of event_types or event_groups.\n\nExample of a request:\n\n.. code-block:: http\n\n    POST /api/hooks-push/ HTTP/1.1\n    Content-Type: application/json\n    Accept: application/json\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com\n\n    {\n        \"event_types\": [\"resource_start_succeeded\"],\n        \"event_groups\": [\"users\"],\n        \"type\": \"Android\"\n    }\n\nYou may temporarily disable hook without deleting it by issuing following **PATCH** request against hook URL:\n\n.. code-block:: javascript\n\n    {\n        \"is_active\": \"false\"\n    }",
        "parameters": [
          {
            "schema": {
              "required": [
                "type"
              ],
              "type": "object",
              "properties": {
                "event_groups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "device_model": {
                  "type": "string",
                  "description": ""
                },
                "is_active": {
                  "type": "boolean",
                  "description": ""
                },
                "token": {
                  "type": "string",
                  "description": ""
                },
                "event_types": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "device_manufacturer": {
                  "type": "string",
                  "description": ""
                },
                "type": {
                  "type": "string",
                  "description": ""
                },
                "device_id": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To create new push hook issue **POST** against */api/hooks-push/* as an authenticated user.",
        "operationId": "hooks-push_create",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/hooks-push/{uuid}/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "hooks-push_read"
      },
      "put": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "type"
              ],
              "type": "object",
              "properties": {
                "event_groups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "device_model": {
                  "type": "string",
                  "description": ""
                },
                "is_active": {
                  "type": "boolean",
                  "description": ""
                },
                "token": {
                  "type": "string",
                  "description": ""
                },
                "event_types": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "device_manufacturer": {
                  "type": "string",
                  "description": ""
                },
                "type": {
                  "type": "string",
                  "description": ""
                },
                "device_id": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "hooks-push_update"
      },
      "patch": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "event_groups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "device_model": {
                  "type": "string",
                  "description": ""
                },
                "is_active": {
                  "type": "boolean",
                  "description": ""
                },
                "token": {
                  "type": "string",
                  "description": ""
                },
                "event_types": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "device_manufacturer": {
                  "type": "string",
                  "description": ""
                },
                "type": {
                  "type": "string",
                  "description": ""
                },
                "device_id": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "hooks-push_partial_update"
      },
      "delete": {
        "tags": [
          "api"
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "hooks-push_delete"
      }
    },
    "/api/hooks-web/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "user",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "is_active",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "last_published",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "destination_url",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "content_type",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "author_uuid",
            "in": "query"
          }
        ],
        "operationId": "hooks-web_list"
      },
      "post": {
        "description": "To create new web hook issue **POST** against */api/hooks-web/* as an authenticated user.\nYou should specify list of event_types or event_groups.\n\nExample of a request:\n\n.. code-block:: http\n\n    POST /api/hooks-web/ HTTP/1.1\n    Content-Type: application/json\n    Accept: application/json\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com\n\n    {\n        \"event_types\": [\"resource_start_succeeded\"],\n        \"event_groups\": [\"users\"],\n        \"destination_url\": \"http://example.com/\"\n    }\n\nWhen hook is activated, **POST** request is issued against destination URL with the following data:\n\n.. code-block:: javascript\n\n    {\n        \"timestamp\": \"2015-07-14T12:12:56.000000\",\n        \"message\": \"Customer ABC LLC has been updated.\",\n        \"type\": \"customer_update_succeeded\",\n        \"context\": {\n            \"user_native_name\": \"Walter Lebrowski\",\n            \"customer_contact_details\": \"\",\n            \"user_username\": \"Walter\",\n            \"user_uuid\": \"1c3323fc4ae44120b57ec40dea1be6e6\",\n            \"customer_uuid\": \"4633bbbb0b3a4b91bffc0e18f853de85\",\n            \"ip_address\": \"8.8.8.8\",\n            \"user_full_name\": \"Walter Lebrowski\",\n            \"customer_abbreviation\": \"ABC LLC\",\n            \"customer_name\": \"ABC LLC\"\n        },\n        \"levelname\": \"INFO\"\n    }\n\nNote that context depends on event type.",
        "parameters": [
          {
            "schema": {
              "required": [
                "destination_url"
              ],
              "type": "object",
              "properties": {
                "event_groups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "is_active": {
                  "type": "boolean",
                  "description": ""
                },
                "event_types": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "content_type": {
                  "type": "string",
                  "description": ""
                },
                "destination_url": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To create new web hook issue **POST** against */api/hooks-web/* as an authenticated user.",
        "operationId": "hooks-web_create",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/hooks-web/{uuid}/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "hooks-web_read"
      },
      "put": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "destination_url"
              ],
              "type": "object",
              "properties": {
                "event_groups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "is_active": {
                  "type": "boolean",
                  "description": ""
                },
                "event_types": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "content_type": {
                  "type": "string",
                  "description": ""
                },
                "destination_url": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "hooks-web_update"
      },
      "patch": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "event_groups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "is_active": {
                  "type": "boolean",
                  "description": ""
                },
                "event_types": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "content_type": {
                  "type": "string",
                  "description": ""
                },
                "destination_url": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "hooks-web_partial_update"
      },
      "delete": {
        "tags": [
          "api"
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "hooks-web_delete"
      }
    },
    "/api/hooks/": {
      "get": {
        "description": "Use */api/hooks/* to get a list of all the hooks of any type that a user can see.",
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "Use */api/hooks/* to get a list of all the hooks of any type that a user can see.",
        "operationId": "hooks_list",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/keys/": {
      "get": {
        "description": "To get a list of SSH keys, run **GET** against */api/keys/* as authenticated user.\n\nA new SSH key can be created by any active users. Example of a valid request:\n\n.. code-block:: http\n\n    POST /api/keys/ HTTP/1.1\n    Content-Type: application/json\n    Accept: application/json\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com\n\n    {\n        \"name\": \"ssh_public_key1\",\n        \"public_key\": \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDDURXDP5YhOQUYoDuTxJ84DuzqMJYJqJ8+SZT28\n                       TtLm5yBDRLKAERqtlbH2gkrQ3US58gd2r8H9jAmQOydfvgwauxuJUE4eDpaMWupqquMYsYLB5f+vVGhdZbbzfc6DTQ2rY\n                       dknWoMoArlG7MvRMA/xQ0ye1muTv+mYMipnd7Z+WH0uVArYI9QBpqC/gpZRRIouQ4VIQIVWGoT6M4Kat5ZBXEa9yP+9du\n                       D2C05GX3gumoSAVyAcDHn/xgej9pYRXGha4l+LKkFdGwAoXdV1z79EG1+9ns7wXuqMJFHM2KDpxAizV0GkZcojISvDwuh\n                       vEAFdOJcqjyyH4FOGYa8usP1 jhon@example.com\",\n    }",
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "fingerprint",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "user_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "o",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To get a list of SSH keys, run **GET** against */api/keys/* as authenticated user.",
        "operationId": "keys_list",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "SSH public keys are injected to VM instances during creation, so that holder of corresponding SSH private key can\nlog in to that instance.\nSSH public keys are connected to user accounts, whereas the key may belong to one user only,\nand the user may have multiple SSH keys.\nUsers can only access SSH keys connected to their accounts. Staff users can see all the accounts.\nProject administrators can select what SSH key will be injected into VM instance during instance provisioning.",
        "parameters": [
          {
            "schema": {
              "required": [
                "public_key"
              ],
              "type": "object",
              "properties": {
                "public_key": {
                  "type": "string",
                  "description": ""
                },
                "name": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "SSH public keys are injected to VM instances during creation, so that holder of corresponding SSH private key can",
        "operationId": "keys_create",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/keys/{uuid}/": {
      "get": {
        "description": "SSH public keys are injected to VM instances during creation, so that holder of corresponding SSH private key can\nlog in to that instance.\nSSH public keys are connected to user accounts, whereas the key may belong to one user only,\nand the user may have multiple SSH keys.\nUsers can only access SSH keys connected to their accounts. Staff users can see all the accounts.\nProject administrators can select what SSH key will be injected into VM instance during instance provisioning.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "SSH public keys are injected to VM instances during creation, so that holder of corresponding SSH private key can",
        "operationId": "keys_read",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "SSH public keys are injected to VM instances during creation, so that holder of corresponding SSH private key can\nlog in to that instance.\nSSH public keys are connected to user accounts, whereas the key may belong to one user only,\nand the user may have multiple SSH keys.\nUsers can only access SSH keys connected to their accounts. Staff users can see all the accounts.\nProject administrators can select what SSH key will be injected into VM instance during instance provisioning.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "SSH public keys are injected to VM instances during creation, so that holder of corresponding SSH private key can",
        "operationId": "keys_delete",
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/openstack-flavors/": {
      "get": {
        "description": "VM instance flavor is a pre-defined set of virtual hardware parameters that the instance will use:\nCPU, memory, disk size etc. VM instance flavor is not to be confused with VM template -- flavor is a set of virtual\nhardware parameters whereas template is a definition of a system to be installed on this instance.",
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "ram",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "ram__gte",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "ram__lte",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "settings",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "cores",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "cores__gte",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "cores__lte",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "disk",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "disk__gte",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "disk__lte",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "settings_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "o",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "VM instance flavor is a pre-defined set of virtual hardware parameters that the instance will use:",
        "operationId": "openstack-flavors_list",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/openstack-flavors/{uuid}/": {
      "get": {
        "description": "VM instance flavor is a pre-defined set of virtual hardware parameters that the instance will use:\nCPU, memory, disk size etc. VM instance flavor is not to be confused with VM template -- flavor is a set of virtual\nhardware parameters whereas template is a definition of a system to be installed on this instance.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "VM instance flavor is a pre-defined set of virtual hardware parameters that the instance will use:",
        "operationId": "openstack-flavors_read",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/openstack-floating-ips/": {
      "get": {
        "description": "To get a list of all available floating IPs, issue **GET** against */api/floating-ips/*.\nFloating IPs are read only. Each floating IP has fields: 'address', 'status'.\n\nStatus *DOWN* means that floating IP is not linked to a VM, status *ACTIVE* means that it is in use.",
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_native_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_abbreviation",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_settings_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_settings_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "description",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "state",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "tag",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "rtag",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "runtime_state",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "o",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "tenant_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "tenant",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To get a list of all available floating IPs, issue **GET** against */api/floating-ips/*.",
        "operationId": "openstack-floating-ips_list",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "api"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [],
        "operationId": "openstack-floating-ips_create"
      }
    },
    "/api/openstack-floating-ips/{uuid}/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack-floating-ips_read"
      },
      "put": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack-floating-ips_update"
      },
      "patch": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack-floating-ips_partial_update"
      },
      "delete": {
        "tags": [
          "api"
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack-floating-ips_delete"
      }
    },
    "/api/openstack-floating-ips/{uuid}/pull/": {
      "post": {
        "tags": [
          "api"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack-floating-ips_pull"
      }
    },
    "/api/openstack-images/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "settings_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "settings",
            "in": "query"
          }
        ],
        "operationId": "openstack-images_list"
      }
    },
    "/api/openstack-images/{uuid}/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack-images_read"
      }
    },
    "/api/openstack-ip-mappings/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "private_ip",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "public_ip",
            "in": "query"
          }
        ],
        "operationId": "openstack-ip-mappings_list"
      },
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "schema": {
              "required": [
                "public_ip",
                "private_ip",
                "project"
              ],
              "type": "object",
              "properties": {
                "public_ip": {
                  "type": "string",
                  "description": ""
                },
                "project": {
                  "type": "string",
                  "description": ""
                },
                "private_ip": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-ip-mappings_create"
      }
    },
    "/api/openstack-ip-mappings/{uuid}/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack-ip-mappings_read"
      },
      "put": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "public_ip",
                "private_ip",
                "project"
              ],
              "type": "object",
              "properties": {
                "public_ip": {
                  "type": "string",
                  "description": ""
                },
                "project": {
                  "type": "string",
                  "description": ""
                },
                "private_ip": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-ip-mappings_update"
      },
      "patch": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "public_ip": {
                  "type": "string",
                  "description": ""
                },
                "project": {
                  "type": "string",
                  "description": ""
                },
                "private_ip": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-ip-mappings_partial_update"
      },
      "delete": {
        "tags": [
          "api"
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack-ip-mappings_delete"
      }
    },
    "/api/openstack-networks/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_native_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_abbreviation",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_settings_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_settings_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "description",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "state",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "tag",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "rtag",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "o",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "tenant_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "tenant",
            "in": "query"
          }
        ],
        "operationId": "openstack-networks_list"
      },
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-networks_create"
      }
    },
    "/api/openstack-networks/{uuid}/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack-networks_read"
      },
      "put": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-networks_update"
      },
      "patch": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-networks_partial_update"
      },
      "delete": {
        "tags": [
          "api"
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack-networks_delete"
      }
    },
    "/api/openstack-networks/{uuid}/create_subnet/": {
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "cidr": {
                  "type": "string",
                  "description": ""
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-networks_create_subnet"
      }
    },
    "/api/openstack-networks/{uuid}/pull/": {
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-networks_pull"
      }
    },
    "/api/openstack-packages/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "tenant",
            "in": "query"
          }
        ],
        "operationId": "openstack-packages_list"
      },
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "schema": {
              "required": [
                "name",
                "service_project_link",
                "template"
              ],
              "type": "object",
              "properties": {
                "extra_configuration": {
                  "type": "string",
                  "description": ""
                },
                "subnet_cidr": {
                  "type": "string",
                  "description": ""
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "availability_zone": {
                  "type": "string",
                  "description": "Optional availability group. Will be used for all instances provisioned in this tenant"
                },
                "user_username": {
                  "type": "string",
                  "description": ""
                },
                "template": {
                  "type": "string",
                  "description": ""
                },
                "service_project_link": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-packages_create"
      }
    },
    "/api/openstack-packages/extend/": {
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "schema": {
              "required": [
                "package",
                "template"
              ],
              "type": "object",
              "properties": {
                "template": {
                  "type": "string",
                  "description": ""
                },
                "package": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-packages_extend"
      }
    },
    "/api/openstack-packages/{uuid}/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack-packages_read"
      },
      "put": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack-packages_update"
      },
      "patch": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack-packages_partial_update"
      },
      "delete": {
        "tags": [
          "api"
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack-packages_delete"
      }
    },
    "/api/openstack-security-groups/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "description",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "error_message",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "backend_id",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "start_time",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_project_link",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "tenant",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_native_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_abbreviation",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_settings_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_settings_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "state",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "tag",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "rtag",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "o",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "tenant_uuid",
            "in": "query"
          }
        ],
        "operationId": "openstack-security-groups_list"
      },
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "schema": {
              "required": [
                "name",
                "rules"
              ],
              "type": "object",
              "properties": {
                "rules": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-security-groups_create"
      }
    },
    "/api/openstack-security-groups/{uuid}/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack-security-groups_read"
      },
      "put": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-security-groups_update"
      },
      "patch": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-security-groups_partial_update"
      },
      "delete": {
        "tags": [
          "api"
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack-security-groups_delete"
      }
    },
    "/api/openstack-security-groups/{uuid}/pull/": {
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name",
                "rules"
              ],
              "type": "object",
              "properties": {
                "rules": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-security-groups_pull"
      }
    },
    "/api/openstack-security-groups/{uuid}/set_rules/": {
      "post": {
        "description": "WARNING! Auto-generated HTML form is wrong for this endpoint. List should be defined as input.\n\nExample:\n[\n    {\n        \"protocol\": \"tcp\",\n        \"from_port\": 1,\n        \"to_port\": 10,\n        \"cidr\": \"10.1.1.0/24\"\n    }\n]",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "to_port": {
                  "type": "integer",
                  "description": ""
                },
                "cidr": {
                  "type": "string",
                  "description": ""
                },
                "from_port": {
                  "type": "integer",
                  "description": ""
                },
                "protocol": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "WARNING! Auto-generated HTML form is wrong for this endpoint. List should be defined as input.",
        "operationId": "openstack-security-groups_set_rules",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/openstack-service-project-link/": {
      "get": {
        "description": "In order to be able to provision OpenStack resources, it must first be linked to a project. To do that,\n**POST** a connection between project and a service to */api/openstack-service-project-link/*\nas stuff user or customer owner.\n\nExample of a request:\n\n.. code-block:: http\n\n    POST /api/openstack-service-project-link/ HTTP/1.1\n    Content-Type: application/json\n    Accept: application/json\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com\n\n    {\n        \"project\": \"http://example.com/api/projects/e5f973af2eb14d2d8c38d62bcbaccb33/\",\n        \"service\": \"http://example.com/api/openstack/b0e8a4cbd47c4f9ca01642b7ec033db4/\"\n    }\n\nTo remove a link, issue DELETE to URL of the corresponding connection as stuff user or customer owner.",
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project_uuid",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "In order to be able to provision OpenStack resources, it must first be linked to a project. To do that,",
        "operationId": "openstack-service-project-link_list",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "schema": {
              "required": [
                "project",
                "service"
              ],
              "type": "object",
              "properties": {
                "project": {
                  "type": "string",
                  "description": ""
                },
                "service": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-service-project-link_create"
      }
    },
    "/api/openstack-service-project-link/{id}/": {
      "get": {
        "description": "To remove a link, issue **DELETE** to URL of the corresponding connection as stuff user or customer owner.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To remove a link, issue **DELETE** to URL of the corresponding connection as stuff user or customer owner.",
        "operationId": "openstack-service-project-link_read",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "project",
                "service"
              ],
              "type": "object",
              "properties": {
                "project": {
                  "type": "string",
                  "description": ""
                },
                "service": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-service-project-link_update"
      },
      "patch": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "project": {
                  "type": "string",
                  "description": ""
                },
                "service": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-service-project-link_partial_update"
      },
      "delete": {
        "tags": [
          "api"
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "id",
            "in": "path"
          }
        ],
        "operationId": "openstack-service-project-link_delete"
      }
    },
    "/api/openstack-subnets/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_native_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_abbreviation",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_settings_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_settings_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "description",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "state",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "tag",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "rtag",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "o",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "tenant_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "tenant",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "network_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "network",
            "in": "query"
          }
        ],
        "operationId": "openstack-subnets_list"
      },
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "cidr": {
                  "type": "string",
                  "description": ""
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-subnets_create"
      }
    },
    "/api/openstack-subnets/{uuid}/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack-subnets_read"
      },
      "put": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-subnets_update"
      },
      "patch": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-subnets_partial_update"
      },
      "delete": {
        "tags": [
          "api"
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack-subnets_delete"
      }
    },
    "/api/openstack-subnets/{uuid}/pull/": {
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "cidr": {
                  "type": "string",
                  "description": ""
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-subnets_pull"
      }
    },
    "/api/openstack-tenants/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_native_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_abbreviation",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_settings_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_settings_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "description",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "state",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "tag",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "rtag",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "o",
            "in": "query"
          }
        ],
        "operationId": "openstack-tenants_list"
      },
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "schema": {
              "required": [
                "name",
                "service_project_link"
              ],
              "type": "object",
              "properties": {
                "extra_configuration": {
                  "type": "string",
                  "description": ""
                },
                "subnet_cidr": {
                  "type": "string",
                  "description": ""
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "availability_zone": {
                  "type": "string",
                  "description": "Optional availability group. Will be used for all instances provisioned in this tenant"
                },
                "user_username": {
                  "type": "string",
                  "description": ""
                },
                "service_project_link": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-tenants_create"
      }
    },
    "/api/openstack-tenants/{uuid}/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack-tenants_read"
      },
      "put": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "subnet_cidr": {
                  "type": "string",
                  "description": ""
                },
                "extra_configuration": {
                  "type": "string",
                  "description": ""
                },
                "availability_zone": {
                  "type": "string",
                  "description": "Optional availability group. Will be used for all instances provisioned in this tenant"
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-tenants_update"
      },
      "patch": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "subnet_cidr": {
                  "type": "string",
                  "description": ""
                },
                "extra_configuration": {
                  "type": "string",
                  "description": ""
                },
                "availability_zone": {
                  "type": "string",
                  "description": "Optional availability group. Will be used for all instances provisioned in this tenant"
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-tenants_partial_update"
      },
      "delete": {
        "tags": [
          "api"
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack-tenants_delete"
      }
    },
    "/api/openstack-tenants/{uuid}/create_floating_ip/": {
      "post": {
        "tags": [
          "api"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack-tenants_create_floating_ip"
      }
    },
    "/api/openstack-tenants/{uuid}/create_network/": {
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-tenants_create_network"
      }
    },
    "/api/openstack-tenants/{uuid}/create_security_group/": {
      "post": {
        "description": "Example of a request:\n\n.. code-block:: http\n\n    {\n        \"name\": \"Security group name\",\n        \"description\": \"description\",\n        \"rules\": [\n            {\n                \"protocol\": \"tcp\",\n                \"from_port\": 1,\n                \"to_port\": 10,\n                \"cidr\": \"10.1.1.0/24\"\n            },\n            {\n                \"protocol\": \"udp\",\n                \"from_port\": 10,\n                \"to_port\": 8000,\n                \"cidr\": \"10.1.1.0/24\"\n            }\n        ]\n    }",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name",
                "rules"
              ],
              "type": "object",
              "properties": {
                "rules": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "Example of a request:",
        "operationId": "openstack-tenants_create_security_group",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/openstack-tenants/{uuid}/create_service/": {
      "post": {
        "description": "Create non-admin service with credentials from the tenant",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "Create non-admin service with credentials from the tenant",
        "operationId": "openstack-tenants_create_service",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/openstack-tenants/{uuid}/pull/": {
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name",
                "service_project_link"
              ],
              "type": "object",
              "properties": {
                "extra_configuration": {
                  "type": "string",
                  "description": ""
                },
                "subnet_cidr": {
                  "type": "string",
                  "description": ""
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "availability_zone": {
                  "type": "string",
                  "description": "Optional availability group. Will be used for all instances provisioned in this tenant"
                },
                "user_username": {
                  "type": "string",
                  "description": ""
                },
                "service_project_link": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-tenants_pull"
      }
    },
    "/api/openstack-tenants/{uuid}/pull_floating_ips/": {
      "post": {
        "tags": [
          "api"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack-tenants_pull_floating_ips"
      }
    },
    "/api/openstack-tenants/{uuid}/pull_security_groups/": {
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name",
                "service_project_link"
              ],
              "type": "object",
              "properties": {
                "extra_configuration": {
                  "type": "string",
                  "description": ""
                },
                "subnet_cidr": {
                  "type": "string",
                  "description": ""
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "availability_zone": {
                  "type": "string",
                  "description": "Optional availability group. Will be used for all instances provisioned in this tenant"
                },
                "user_username": {
                  "type": "string",
                  "description": ""
                },
                "service_project_link": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack-tenants_pull_security_groups"
      }
    },
    "/api/openstack-tenants/{uuid}/set_quotas/": {
      "post": {
        "description": "A quota can be set for a particular tenant. Only staff users can do that.\nIn order to set quota submit **POST** request to */api/openstack-tenants/<uuid>/set_quotas/*.\nThe quota values are propagated to the backend.\n\nThe following quotas are supported. All values are expected to be integers:\n\n- instances - maximal number of created instances.\n- ram - maximal size of ram for allocation. In MiB_.\n- storage - maximal size of storage for allocation. In MiB_.\n- vcpu - maximal number of virtual cores for allocation.\n- security_group_count - maximal number of created security groups.\n- security_group_rule_count - maximal number of created security groups rules.\n- volumes - maximal number of created volumes.\n- snapshots - maximal number of created snapshots.\n\nIt is possible to update quotas by one or by submitting all the fields in one request.\nNodeConductor will attempt to update the provided quotas. Please note, that if provided quotas are\nconflicting with the backend (e.g. requested number of instances is below of the already existing ones),\nsome quotas might not be applied.\n\n.. _MiB: http://en.wikipedia.org/wiki/Mebibyte\n.. _settings: http://nodeconductor.readthedocs.org/en/stable/guide/intro.html#id1\n\nExample of a valid request (token is user specific):\n\n.. code-block:: http\n\n    POST /api/openstack-tenants/c84d653b9ec92c6cbac41c706593e66f567a7fa4/set_quotas/ HTTP/1.1\n    Content-Type: application/json\n    Accept: application/json\n    Host: example.com\n\n    {\n        \"instances\": 30,\n        \"ram\": 100000,\n        \"storage\": 1000000,\n        \"vcpu\": 30,\n        \"security_group_count\": 100,\n        \"security_group_rule_count\": 100,\n        \"volumes\": 10,\n        \"snapshots\": 20\n    }\n\nResponse code of a successful request is **202 ACCEPTED**. In case tenant is in a non-stable status, the response\nwould be **409 CONFLICT**. In this case REST client is advised to repeat the request after some time.\nOn successful completion the task will synchronize quotas with the backend.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "vcpu": {
                  "type": "integer",
                  "description": ""
                },
                "ram": {
                  "type": "integer",
                  "description": ""
                },
                "storage": {
                  "type": "integer",
                  "description": ""
                },
                "snapshots": {
                  "type": "integer",
                  "description": ""
                },
                "instances": {
                  "type": "integer",
                  "description": ""
                },
                "security_group_count": {
                  "type": "integer",
                  "description": ""
                },
                "volumes": {
                  "type": "integer",
                  "description": ""
                },
                "security_group_rule_count": {
                  "type": "integer",
                  "description": ""
                },
                "backup_storage": {
                  "type": "integer",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "A quota can be set for a particular tenant. Only staff users can do that.",
        "operationId": "openstack-tenants_set_quotas",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/openstack/": {
      "get": {
        "description": "To create a service, issue a **POST** to */api/openstack/* as a customer owner.\n\nYou can create service based on shared service settings. Example:\n\n.. code-block:: http\n\n    POST /api/openstack/ HTTP/1.1\n    Content-Type: application/json\n    Accept: application/json\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com\n\n    {\n        \"name\": \"Common OpenStack\",\n        \"customer\": \"http://example.com/api/customers/1040561ca9e046d2b74268600c7e1105/\",\n        \"settings\": \"http://example.com/api/service-settings/93ba615d6111466ebe3f792669059cb4/\"\n    }\n\nOr provide your own credentials. Example:\n\n.. code-block:: http\n\n    POST /api/openstack/ HTTP/1.1\n    Content-Type: application/json\n    Accept: application/json\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com\n\n    {\n        \"name\": \"My OpenStack\",\n        \"customer\": \"http://example.com/api/customers/1040561ca9e046d2b74268600c7e1105/\",\n        \"backend_url\": \"http://keystone.example.com:5000/v2.0\",\n        \"username\": \"admin\",\n        \"password\": \"secret\"\n    }",
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "settings",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "shared",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "type",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "tag",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "rtag",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To create a service, issue a **POST** to */api/openstack/* as a customer owner.",
        "operationId": "openstack_list",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "schema": {
              "required": [
                "name",
                "customer",
                "settings",
                "backend_url",
                "username",
                "password",
                "tenant_name"
              ],
              "type": "object",
              "properties": {
                "customer": {
                  "type": "string",
                  "description": ""
                },
                "username": {
                  "type": "string",
                  "description": "Administrative user"
                },
                "available_for_all": {
                  "type": "boolean",
                  "description": "Service will be automatically added to all customers projects if it is available for all"
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "backend_url": {
                  "type": "string",
                  "description": "Keystone auth URL (e.g. http://keystone.example.com:5000/v2.0)"
                },
                "external_network_id": {
                  "type": "string",
                  "description": "ID of OpenStack external network that will be connected to tenants"
                },
                "settings": {
                  "type": "string",
                  "description": ""
                },
                "dns_nameservers": {
                  "type": "string",
                  "description": "Default value for new subnets DNS name servers. Should be defined as list."
                },
                "longitude": {
                  "type": "string",
                  "description": "Longitude of the datacenter (e.g. -74.005941)"
                },
                "project": {
                  "type": "string",
                  "description": ""
                },
                "latitude": {
                  "type": "string",
                  "description": "Latitude of the datacenter (e.g. 40.712784)"
                },
                "is_admin": {
                  "type": "string",
                  "description": "Configure service with admin privileges (default: true)"
                },
                "tenant_name": {
                  "type": "string",
                  "description": " (default: \"admin\")"
                },
                "availability_zone": {
                  "type": "string",
                  "description": "Default availability zone for provisioned instances"
                },
                "scope": {
                  "type": "string",
                  "description": "VM that contains service"
                },
                "access_url": {
                  "type": "string",
                  "description": "Publicly accessible OpenStack dashboard URL"
                },
                "password": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack_create"
      }
    },
    "/api/openstack/{uuid}/": {
      "get": {
        "description": "To update OpenStack service issue **PUT** or **PATCH** against */api/openstack/<service_uuid>/*\nas a customer owner. You can update service's `name` and `available_for_all` fields.\n\nExample of a request:\n\n.. code-block:: http\n\n    PUT /api/openstack/c6526bac12b343a9a65c4cd6710666ee/ HTTP/1.1\n    Content-Type: application/json\n    Accept: application/json\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com\n\n    {\n        \"name\": \"My OpenStack2\"\n    }\n\nTo remove OpenStack service, issue **DELETE** against */api/openstack/<service_uuid>/* as\nstaff user or customer owner.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To update OpenStack service issue **PUT** or **PATCH** against */api/openstack/<service_uuid>/*",
        "operationId": "openstack_read",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "available_for_all": {
                  "type": "boolean",
                  "description": "Service will be automatically added to all customers projects if it is available for all"
                },
                "name": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack_update"
      },
      "patch": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "available_for_all": {
                  "type": "boolean",
                  "description": "Service will be automatically added to all customers projects if it is available for all"
                },
                "name": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstack_partial_update"
      },
      "delete": {
        "tags": [
          "api"
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack_delete"
      }
    },
    "/api/openstack/{uuid}/link/": {
      "get": {
        "description": "To get a list of resources available for import, run **GET** against */<service_endpoint>/link/*\nas an authenticated user.\nOptionally project_uuid parameter can be supplied for services requiring it like OpenStack.\n\nTo import (link with NodeConductor) resource issue **POST** against the same endpoint with resource id.\n\n.. code-block:: http\n\n    POST /api/openstack/08039f01c9794efc912f1689f4530cf0/link/ HTTP/1.1\n    Content-Type: application/json\n    Accept: application/json\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com\n\n    {\n        \"backend_id\": \"bd5ec24d-9164-440b-a9f2-1b3c807c5df3\",\n        \"project\": \"http://example.com/api/projects/e5f973af2eb14d2d8c38d62bcbaccb33/\"\n    }",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To get a list of resources available for import, run **GET** against */<service_endpoint>/link/*",
        "operationId": "openstack_link_read",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "To get a list of resources available for import, run **GET** against */<service_endpoint>/link/*\nas an authenticated user.\nOptionally project_uuid parameter can be supplied for services requiring it like OpenStack.\n\nTo import (link with NodeConductor) resource issue **POST** against the same endpoint with resource id.\n\n.. code-block:: http\n\n    POST /api/openstack/08039f01c9794efc912f1689f4530cf0/link/ HTTP/1.1\n    Content-Type: application/json\n    Accept: application/json\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com\n\n    {\n        \"backend_id\": \"bd5ec24d-9164-440b-a9f2-1b3c807c5df3\",\n        \"project\": \"http://example.com/api/projects/e5f973af2eb14d2d8c38d62bcbaccb33/\"\n    }",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "backend_id",
                "project"
              ],
              "type": "object",
              "properties": {
                "project": {
                  "type": "string",
                  "description": ""
                },
                "backend_id": {
                  "type": "string",
                  "description": ""
                },
                "import_history": {
                  "type": "boolean",
                  "description": "Import historical resource usage"
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To get a list of resources available for import, run **GET** against */<service_endpoint>/link/*",
        "operationId": "openstack_link_create",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/openstack/{uuid}/managed_resources/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstack_managed_resources_read"
      }
    },
    "/api/openstack/{uuid}/unlink/": {
      "post": {
        "description": "Unlink all related resources, service project link and service itself.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name",
                "customer",
                "settings",
                "backend_url",
                "username",
                "password",
                "tenant_name"
              ],
              "type": "object",
              "properties": {
                "customer": {
                  "type": "string",
                  "description": ""
                },
                "username": {
                  "type": "string",
                  "description": "Administrative user"
                },
                "available_for_all": {
                  "type": "boolean",
                  "description": "Service will be automatically added to all customers projects if it is available for all"
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "backend_url": {
                  "type": "string",
                  "description": "Keystone auth URL (e.g. http://keystone.example.com:5000/v2.0)"
                },
                "external_network_id": {
                  "type": "string",
                  "description": "ID of OpenStack external network that will be connected to tenants"
                },
                "settings": {
                  "type": "string",
                  "description": ""
                },
                "dns_nameservers": {
                  "type": "string",
                  "description": "Default value for new subnets DNS name servers. Should be defined as list."
                },
                "longitude": {
                  "type": "string",
                  "description": "Longitude of the datacenter (e.g. -74.005941)"
                },
                "project": {
                  "type": "string",
                  "description": ""
                },
                "latitude": {
                  "type": "string",
                  "description": "Latitude of the datacenter (e.g. 40.712784)"
                },
                "is_admin": {
                  "type": "string",
                  "description": "Configure service with admin privileges (default: true)"
                },
                "tenant_name": {
                  "type": "string",
                  "description": " (default: \"admin\")"
                },
                "availability_zone": {
                  "type": "string",
                  "description": "Default availability zone for provisioned instances"
                },
                "scope": {
                  "type": "string",
                  "description": "VM that contains service"
                },
                "access_url": {
                  "type": "string",
                  "description": "Publicly accessible OpenStack dashboard URL"
                },
                "password": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "Unlink all related resources, service project link and service itself.",
        "operationId": "openstack_unlink",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/openstacktenant-flavors/": {
      "get": {
        "description": "VM instance flavor is a pre-defined set of virtual hardware parameters that the instance will use:\nCPU, memory, disk size etc. VM instance flavor is not to be confused with VM template -- flavor is a set of virtual\nhardware parameters whereas template is a definition of a system to be installed on this instance.",
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "ram",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "ram__gte",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "ram__lte",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "settings",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "cores",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "cores__gte",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "cores__lte",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "disk",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "disk__gte",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "disk__lte",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "settings_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "o",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "VM instance flavor is a pre-defined set of virtual hardware parameters that the instance will use:",
        "operationId": "openstacktenant-flavors_list",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/openstacktenant-flavors/{uuid}/": {
      "get": {
        "description": "VM instance flavor is a pre-defined set of virtual hardware parameters that the instance will use:\nCPU, memory, disk size etc. VM instance flavor is not to be confused with VM template -- flavor is a set of virtual\nhardware parameters whereas template is a definition of a system to be installed on this instance.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "VM instance flavor is a pre-defined set of virtual hardware parameters that the instance will use:",
        "operationId": "openstacktenant-flavors_read",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/openstacktenant-floating-ips/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "settings_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "settings",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "runtime_state",
            "in": "query"
          }
        ],
        "operationId": "openstacktenant-floating-ips_list"
      }
    },
    "/api/openstacktenant-floating-ips/{uuid}/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstacktenant-floating-ips_read"
      }
    },
    "/api/openstacktenant-images/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "settings_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "settings",
            "in": "query"
          }
        ],
        "operationId": "openstacktenant-images_list"
      }
    },
    "/api/openstacktenant-images/{uuid}/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstacktenant-images_read"
      }
    },
    "/api/openstacktenant-instances/": {
      "get": {
        "description": "OpenStack instance permissions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Staff members can list all available VM instances in any service.\n- Customer owners can list all VM instances in all the services that belong to any of the customers they own.\n- Project administrators can list all VM instances, create new instances and start/stop/restart instances in all the\nservices that are connected to any of the projects they are administrators in.\n- Project managers can list all VM instances in all the services that are connected to any of the projects they are\nmanagers in.",
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_native_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_abbreviation",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_settings_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_settings_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "description",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "state",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "tag",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "rtag",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "o",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "tenant_uuid",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "OpenStack instance permissions",
        "operationId": "openstacktenant-instances_list",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "OpenStack instance permissions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Staff members can list all available VM instances in any service.\n- Customer owners can list all VM instances in all the services that belong to any of the customers they own.\n- Project administrators can list all VM instances, create new instances and start/stop/restart instances in all the\nservices that are connected to any of the projects they are administrators in.\n- Project managers can list all VM instances in all the services that are connected to any of the projects they are\nmanagers in.",
        "parameters": [
          {
            "schema": {
              "required": [
                "name",
                "service_project_link",
                "flavor",
                "image",
                "system_volume_size"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                },
                "system_volume_size": {
                  "type": "integer",
                  "description": ""
                },
                "image": {
                  "type": "string",
                  "description": ""
                },
                "data_volume_size": {
                  "type": "integer",
                  "description": ""
                },
                "user_data": {
                  "type": "string",
                  "description": "Additional data that will be added to instance on provisioning"
                },
                "floating_ip": {
                  "type": "string",
                  "description": ""
                },
                "ssh_public_key": {
                  "type": "string",
                  "description": ""
                },
                "allocate_floating_ip": {
                  "type": "boolean",
                  "description": ""
                },
                "service_project_link": {
                  "type": "string",
                  "description": ""
                },
                "flavor": {
                  "type": "string",
                  "description": ""
                },
                "security_groups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "OpenStack instance permissions",
        "operationId": "openstacktenant-instances_create",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/openstacktenant-instances/{uuid}/": {
      "get": {
        "description": "OpenStack instance permissions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Staff members can list all available VM instances in any service.\n- Customer owners can list all VM instances in all the services that belong to any of the customers they own.\n- Project administrators can list all VM instances, create new instances and start/stop/restart instances in all the\nservices that are connected to any of the projects they are administrators in.\n- Project managers can list all VM instances in all the services that are connected to any of the projects they are\nmanagers in.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "OpenStack instance permissions",
        "operationId": "openstacktenant-instances_read",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "OpenStack instance permissions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Staff members can list all available VM instances in any service.\n- Customer owners can list all VM instances in all the services that belong to any of the customers they own.\n- Project administrators can list all VM instances, create new instances and start/stop/restart instances in all the\nservices that are connected to any of the projects they are administrators in.\n- Project managers can list all VM instances in all the services that are connected to any of the projects they are\nmanagers in.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "OpenStack instance permissions",
        "operationId": "openstacktenant-instances_update",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "patch": {
        "description": "OpenStack instance permissions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Staff members can list all available VM instances in any service.\n- Customer owners can list all VM instances in all the services that belong to any of the customers they own.\n- Project administrators can list all VM instances, create new instances and start/stop/restart instances in all the\nservices that are connected to any of the projects they are administrators in.\n- Project managers can list all VM instances in all the services that are connected to any of the projects they are\nmanagers in.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "OpenStack instance permissions",
        "operationId": "openstacktenant-instances_partial_update",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Deletion of an instance is done through sending a **DELETE** request to the instance URI.\nValid request example (token is user specific):\n\n.. code-block:: http\n\n    DELETE /api/openstacktenant-instances/abceed63b8e844afacd63daeac855474/ HTTP/1.1\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com\n\nOnly stopped instances or instances in ERRED state can be deleted.\n\nBy default when instance is destroyed, all data volumes\nattached to it are destroyed too. In order to preserve data\nvolumes use query parameter ?delete_volumes=false\nIn this case data volumes are detached from the instance and\nthen instance is destroyed. Note that system volume is deleted anyway.\nFor example:\n\n.. code-block:: http\n\n    DELETE /api/openstacktenant-instances/abceed63b8e844afacd63daeac855474/?delete_volumes=false HTTP/1.1\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "Deletion of an instance is done through sending a **DELETE** request to the instance URI.",
        "operationId": "openstacktenant-instances_delete",
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/openstacktenant-instances/{uuid}/assign_floating_ip/": {
      "post": {
        "description": "To assign floating IP to the instance, make **POST** request to\n*/api/openstacktenant-instances/<uuid>/assign_floating_ip/* with link to the floating IP.\nMake empty POST request to allocate new floating IP and assign it to instance.\nNote that instance should be in stable state, service project link of the instance should be in stable state\nand have external network.\n\nExample of a valid request:\n\n.. code-block:: http\n\n    POST /api/openstacktenant-instances/6c9b01c251c24174a6691a1f894fae31/assign_floating_ip/ HTTP/1.1\n    Content-Type: application/json\n    Accept: application/json\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com\n\n    {\n        \"floating_ip\": \"http://example.com/api/floating-ips/5e7d93955f114d88981dea4f32ab673d/\"\n    }",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "floating_ip": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To assign floating IP to the instance, make **POST** request to",
        "operationId": "openstacktenant-instances_assign_floating_ip",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/openstacktenant-instances/{uuid}/backup/": {
      "post": {
        "description": "OpenStack instance permissions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Staff members can list all available VM instances in any service.\n- Customer owners can list all VM instances in all the services that belong to any of the customers they own.\n- Project administrators can list all VM instances, create new instances and start/stop/restart instances in all the\nservices that are connected to any of the projects they are administrators in.\n- Project managers can list all VM instances in all the services that are connected to any of the projects they are\nmanagers in.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "kept_until": {
                  "type": "string",
                  "description": "Guaranteed time of backup retention. If null - keep forever."
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "OpenStack instance permissions",
        "operationId": "openstacktenant-instances_backup",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/openstacktenant-instances/{uuid}/change_flavor/": {
      "post": {
        "description": "OpenStack instance permissions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Staff members can list all available VM instances in any service.\n- Customer owners can list all VM instances in all the services that belong to any of the customers they own.\n- Project administrators can list all VM instances, create new instances and start/stop/restart instances in all the\nservices that are connected to any of the projects they are administrators in.\n- Project managers can list all VM instances in all the services that are connected to any of the projects they are\nmanagers in.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "flavor"
              ],
              "type": "object",
              "properties": {
                "flavor": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "OpenStack instance permissions",
        "operationId": "openstacktenant-instances_change_flavor",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/openstacktenant-instances/{uuid}/pull/": {
      "post": {
        "description": "OpenStack instance permissions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Staff members can list all available VM instances in any service.\n- Customer owners can list all VM instances in all the services that belong to any of the customers they own.\n- Project administrators can list all VM instances, create new instances and start/stop/restart instances in all the\nservices that are connected to any of the projects they are administrators in.\n- Project managers can list all VM instances in all the services that are connected to any of the projects they are\nmanagers in.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name",
                "service_project_link",
                "flavor",
                "image",
                "system_volume_size"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                },
                "system_volume_size": {
                  "type": "integer",
                  "description": ""
                },
                "image": {
                  "type": "string",
                  "description": ""
                },
                "data_volume_size": {
                  "type": "integer",
                  "description": ""
                },
                "user_data": {
                  "type": "string",
                  "description": "Additional data that will be added to instance on provisioning"
                },
                "floating_ip": {
                  "type": "string",
                  "description": ""
                },
                "ssh_public_key": {
                  "type": "string",
                  "description": ""
                },
                "allocate_floating_ip": {
                  "type": "boolean",
                  "description": ""
                },
                "service_project_link": {
                  "type": "string",
                  "description": ""
                },
                "flavor": {
                  "type": "string",
                  "description": ""
                },
                "security_groups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "OpenStack instance permissions",
        "operationId": "openstacktenant-instances_pull",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/openstacktenant-instances/{uuid}/restart/": {
      "post": {
        "description": "OpenStack instance permissions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Staff members can list all available VM instances in any service.\n- Customer owners can list all VM instances in all the services that belong to any of the customers they own.\n- Project administrators can list all VM instances, create new instances and start/stop/restart instances in all the\nservices that are connected to any of the projects they are administrators in.\n- Project managers can list all VM instances in all the services that are connected to any of the projects they are\nmanagers in.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name",
                "service_project_link",
                "flavor",
                "image",
                "system_volume_size"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                },
                "system_volume_size": {
                  "type": "integer",
                  "description": ""
                },
                "image": {
                  "type": "string",
                  "description": ""
                },
                "data_volume_size": {
                  "type": "integer",
                  "description": ""
                },
                "user_data": {
                  "type": "string",
                  "description": "Additional data that will be added to instance on provisioning"
                },
                "floating_ip": {
                  "type": "string",
                  "description": ""
                },
                "ssh_public_key": {
                  "type": "string",
                  "description": ""
                },
                "allocate_floating_ip": {
                  "type": "boolean",
                  "description": ""
                },
                "service_project_link": {
                  "type": "string",
                  "description": ""
                },
                "flavor": {
                  "type": "string",
                  "description": ""
                },
                "security_groups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "OpenStack instance permissions",
        "operationId": "openstacktenant-instances_restart",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/openstacktenant-instances/{uuid}/start/": {
      "post": {
        "description": "OpenStack instance permissions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Staff members can list all available VM instances in any service.\n- Customer owners can list all VM instances in all the services that belong to any of the customers they own.\n- Project administrators can list all VM instances, create new instances and start/stop/restart instances in all the\nservices that are connected to any of the projects they are administrators in.\n- Project managers can list all VM instances in all the services that are connected to any of the projects they are\nmanagers in.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name",
                "service_project_link",
                "flavor",
                "image",
                "system_volume_size"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                },
                "system_volume_size": {
                  "type": "integer",
                  "description": ""
                },
                "image": {
                  "type": "string",
                  "description": ""
                },
                "data_volume_size": {
                  "type": "integer",
                  "description": ""
                },
                "user_data": {
                  "type": "string",
                  "description": "Additional data that will be added to instance on provisioning"
                },
                "floating_ip": {
                  "type": "string",
                  "description": ""
                },
                "ssh_public_key": {
                  "type": "string",
                  "description": ""
                },
                "allocate_floating_ip": {
                  "type": "boolean",
                  "description": ""
                },
                "service_project_link": {
                  "type": "string",
                  "description": ""
                },
                "flavor": {
                  "type": "string",
                  "description": ""
                },
                "security_groups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "OpenStack instance permissions",
        "operationId": "openstacktenant-instances_start",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/openstacktenant-instances/{uuid}/stop/": {
      "post": {
        "description": "OpenStack instance permissions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Staff members can list all available VM instances in any service.\n- Customer owners can list all VM instances in all the services that belong to any of the customers they own.\n- Project administrators can list all VM instances, create new instances and start/stop/restart instances in all the\nservices that are connected to any of the projects they are administrators in.\n- Project managers can list all VM instances in all the services that are connected to any of the projects they are\nmanagers in.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name",
                "service_project_link",
                "flavor",
                "image",
                "system_volume_size"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                },
                "system_volume_size": {
                  "type": "integer",
                  "description": ""
                },
                "image": {
                  "type": "string",
                  "description": ""
                },
                "data_volume_size": {
                  "type": "integer",
                  "description": ""
                },
                "user_data": {
                  "type": "string",
                  "description": "Additional data that will be added to instance on provisioning"
                },
                "floating_ip": {
                  "type": "string",
                  "description": ""
                },
                "ssh_public_key": {
                  "type": "string",
                  "description": ""
                },
                "allocate_floating_ip": {
                  "type": "boolean",
                  "description": ""
                },
                "service_project_link": {
                  "type": "string",
                  "description": ""
                },
                "flavor": {
                  "type": "string",
                  "description": ""
                },
                "security_groups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "OpenStack instance permissions",
        "operationId": "openstacktenant-instances_stop",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/openstacktenant-instances/{uuid}/unassign_floating_ip/": {
      "post": {
        "description": "OpenStack instance permissions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Staff members can list all available VM instances in any service.\n- Customer owners can list all VM instances in all the services that belong to any of the customers they own.\n- Project administrators can list all VM instances, create new instances and start/stop/restart instances in all the\nservices that are connected to any of the projects they are administrators in.\n- Project managers can list all VM instances in all the services that are connected to any of the projects they are\nmanagers in.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "OpenStack instance permissions",
        "operationId": "openstacktenant-instances_unassign_floating_ip",
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/openstacktenant-instances/{uuid}/update_security_groups/": {
      "post": {
        "description": "OpenStack instance permissions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Staff members can list all available VM instances in any service.\n- Customer owners can list all VM instances in all the services that belong to any of the customers they own.\n- Project administrators can list all VM instances, create new instances and start/stop/restart instances in all the\nservices that are connected to any of the projects they are administrators in.\n- Project managers can list all VM instances in all the services that are connected to any of the projects they are\nmanagers in.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "security_groups"
              ],
              "type": "object",
              "properties": {
                "security_groups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "OpenStack instance permissions",
        "operationId": "openstacktenant-instances_update_security_groups",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/openstacktenant-security-groups/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "settings_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "settings",
            "in": "query"
          }
        ],
        "operationId": "openstacktenant-security-groups_list"
      }
    },
    "/api/openstacktenant-security-groups/{uuid}/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstacktenant-security-groups_read"
      }
    },
    "/api/openstacktenant-service-project-link/": {
      "get": {
        "description": "To get a list of connections between a project and an service, run **GET** against service_project_link_url\nas authenticated user. Note that a user can only see connections of a project where a user has a role.\n\nIf service has `available_for_all` flag, project-service connections are created automatically.\nOtherwise, in order to be able to provision resources, service must first be linked to a project.\nTo do that, **POST** a connection between project and a service to service_project_link_url\nas stuff user or customer owner.",
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project_uuid",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To get a list of connections between a project and an service, run **GET** against service_project_link_url",
        "operationId": "openstacktenant-service-project-link_list",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "schema": {
              "required": [
                "project",
                "service"
              ],
              "type": "object",
              "properties": {
                "project": {
                  "type": "string",
                  "description": ""
                },
                "service": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstacktenant-service-project-link_create"
      }
    },
    "/api/openstacktenant-service-project-link/{id}/": {
      "get": {
        "description": "To remove a link, issue **DELETE** to URL of the corresponding connection as stuff user or customer owner.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To remove a link, issue **DELETE** to URL of the corresponding connection as stuff user or customer owner.",
        "operationId": "openstacktenant-service-project-link_read",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "project",
                "service"
              ],
              "type": "object",
              "properties": {
                "project": {
                  "type": "string",
                  "description": ""
                },
                "service": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstacktenant-service-project-link_update"
      },
      "patch": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "project": {
                  "type": "string",
                  "description": ""
                },
                "service": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstacktenant-service-project-link_partial_update"
      },
      "delete": {
        "tags": [
          "api"
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "id",
            "in": "path"
          }
        ],
        "operationId": "openstacktenant-service-project-link_delete"
      }
    },
    "/api/openstacktenant-snapshots/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_native_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_abbreviation",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_settings_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_settings_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "description",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "state",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "tag",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "rtag",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "o",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "source_volume_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "source_volume",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "backup_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "backup",
            "in": "query"
          }
        ],
        "operationId": "openstacktenant-snapshots_list"
      },
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstacktenant-snapshots_create"
      }
    },
    "/api/openstacktenant-snapshots/{uuid}/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstacktenant-snapshots_read"
      },
      "put": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstacktenant-snapshots_update"
      },
      "patch": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstacktenant-snapshots_partial_update"
      },
      "delete": {
        "tags": [
          "api"
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstacktenant-snapshots_delete"
      }
    },
    "/api/openstacktenant-snapshots/{uuid}/pull/": {
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstacktenant-snapshots_pull"
      }
    },
    "/api/openstacktenant-volumes/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_native_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_abbreviation",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_settings_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "service_settings_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "description",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "state",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "tag",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "rtag",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "instance",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "instance_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "o",
            "in": "query"
          }
        ],
        "operationId": "openstacktenant-volumes_list"
      },
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "schema": {
              "required": [
                "name",
                "service_project_link"
              ],
              "type": "object",
              "properties": {
                "service_project_link": {
                  "type": "string",
                  "description": ""
                },
                "size": {
                  "type": "integer",
                  "description": "Size in MiB"
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "image": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstacktenant-volumes_create"
      }
    },
    "/api/openstacktenant-volumes/{uuid}/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstacktenant-volumes_read"
      },
      "put": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstacktenant-volumes_update"
      },
      "patch": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstacktenant-volumes_partial_update"
      },
      "delete": {
        "tags": [
          "api"
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstacktenant-volumes_delete"
      }
    },
    "/api/openstacktenant-volumes/{uuid}/attach/": {
      "post": {
        "description": "Attach volume to instance",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "instance"
              ],
              "type": "object",
              "properties": {
                "device": {
                  "type": "string",
                  "description": "Name of volume as instance device e.g. /dev/vdb."
                },
                "instance": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "Attach volume to instance",
        "operationId": "openstacktenant-volumes_attach",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/openstacktenant-volumes/{uuid}/detach/": {
      "post": {
        "description": "Detach instance from volume",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name",
                "service_project_link"
              ],
              "type": "object",
              "properties": {
                "service_project_link": {
                  "type": "string",
                  "description": ""
                },
                "size": {
                  "type": "integer",
                  "description": "Size in MiB"
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "image": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "Detach instance from volume",
        "operationId": "openstacktenant-volumes_detach",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/openstacktenant-volumes/{uuid}/extend/": {
      "post": {
        "description": "Increase volume size",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "disk_size"
              ],
              "type": "object",
              "properties": {
                "disk_size": {
                  "type": "integer",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "Increase volume size",
        "operationId": "openstacktenant-volumes_extend",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/openstacktenant-volumes/{uuid}/pull/": {
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name",
                "service_project_link"
              ],
              "type": "object",
              "properties": {
                "service_project_link": {
                  "type": "string",
                  "description": ""
                },
                "size": {
                  "type": "integer",
                  "description": "Size in MiB"
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "image": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstacktenant-volumes_pull"
      }
    },
    "/api/openstacktenant-volumes/{uuid}/snapshot/": {
      "post": {
        "description": "Create snapshot from volume",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "Create snapshot from volume",
        "operationId": "openstacktenant-volumes_snapshot",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/openstacktenant/": {
      "get": {
        "description": "To list all services without regard to its type, run **GET** against */api/services/* as an authenticated user.\n\nTo list services of specific type issue **GET** to specific endpoint from a list above as a customer owner.\nIndividual endpoint used for every service type.\n\nTo create a service, issue a **POST** to specific endpoint from a list above as a customer owner.\nIndividual endpoint used for every service type.\n\nYou can create service based on shared service settings. Example:\n\n.. code-block:: http\n\n    POST /api/digitalocean/ HTTP/1.1\n    Content-Type: application/json\n    Accept: application/json\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com\n\n    {\n        \"name\": \"Common DigitalOcean\",\n        \"customer\": \"http://example.com/api/customers/1040561ca9e046d2b74268600c7e1105/\",\n        \"settings\": \"http://example.com/api/service-settings/93ba615d6111466ebe3f792669059cb4/\"\n    }\n\nOr provide your own credentials. Example:\n\n.. code-block:: http\n\n    POST /api/oracle/ HTTP/1.1\n    Content-Type: application/json\n    Accept: application/json\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com\n\n    {\n        \"name\": \"My Oracle\",\n        \"customer\": \"http://example.com/api/customers/1040561ca9e046d2b74268600c7e1105/\",\n        \"backend_url\": \"https://oracle.example.com:7802/em\",\n        \"username\": \"admin\",\n        \"password\": \"secret\"\n    }",
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project_uuid",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "settings",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "shared",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "type",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "tag",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "rtag",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To list all services without regard to its type, run **GET** against */api/services/* as an authenticated user.",
        "operationId": "openstacktenant_list",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "schema": {
              "required": [
                "name",
                "customer",
                "settings",
                "backend_url",
                "username",
                "password",
                "tenant_id"
              ],
              "type": "object",
              "properties": {
                "customer": {
                  "type": "string",
                  "description": ""
                },
                "username": {
                  "type": "string",
                  "description": "Tenant user username"
                },
                "available_for_all": {
                  "type": "boolean",
                  "description": "Service will be automatically added to all customers projects if it is available for all"
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "backend_url": {
                  "type": "string",
                  "description": "Keystone auth URL (e.g. http://keystone.example.com:5000/v2.0)"
                },
                "tenant_id": {
                  "type": "string",
                  "description": "Tenant ID in OpenStack"
                },
                "settings": {
                  "type": "string",
                  "description": ""
                },
                "project": {
                  "type": "string",
                  "description": ""
                },
                "availability_zone": {
                  "type": "string",
                  "description": "Default availability zone for provisioned instances"
                },
                "scope": {
                  "type": "string",
                  "description": "VM that contains service"
                },
                "password": {
                  "type": "string",
                  "description": "Tenant user password"
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstacktenant_create"
      }
    },
    "/api/openstacktenant/{uuid}/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstacktenant_read"
      },
      "put": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "available_for_all": {
                  "type": "boolean",
                  "description": "Service will be automatically added to all customers projects if it is available for all"
                },
                "name": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstacktenant_update"
      },
      "patch": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "available_for_all": {
                  "type": "boolean",
                  "description": "Service will be automatically added to all customers projects if it is available for all"
                },
                "name": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "openstacktenant_partial_update"
      },
      "delete": {
        "tags": [
          "api"
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstacktenant_delete"
      }
    },
    "/api/openstacktenant/{uuid}/managed_resources/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "openstacktenant_managed_resources_read"
      }
    },
    "/api/openstacktenant/{uuid}/unlink/": {
      "post": {
        "description": "Unlink all related resources, service project link and service itself.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name",
                "customer",
                "settings",
                "backend_url",
                "username",
                "password",
                "tenant_id"
              ],
              "type": "object",
              "properties": {
                "customer": {
                  "type": "string",
                  "description": ""
                },
                "username": {
                  "type": "string",
                  "description": "Tenant user username"
                },
                "available_for_all": {
                  "type": "boolean",
                  "description": "Service will be automatically added to all customers projects if it is available for all"
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "backend_url": {
                  "type": "string",
                  "description": "Keystone auth URL (e.g. http://keystone.example.com:5000/v2.0)"
                },
                "tenant_id": {
                  "type": "string",
                  "description": "Tenant ID in OpenStack"
                },
                "settings": {
                  "type": "string",
                  "description": ""
                },
                "project": {
                  "type": "string",
                  "description": ""
                },
                "availability_zone": {
                  "type": "string",
                  "description": "Default availability zone for provisioned instances"
                },
                "scope": {
                  "type": "string",
                  "description": "VM that contains service"
                },
                "password": {
                  "type": "string",
                  "description": "Tenant user password"
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "Unlink all related resources, service project link and service itself.",
        "operationId": "openstacktenant_unlink",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/project-permissions/": {
      "get": {
        "description": "Project permissions expresses connection of user to a project.\nUser may have either project manager or system administrator permission in the project.\nUse */api/project-permissions/* endpoint to maintain project permissions.\n\nNote that project permissions can be viewed and modified only by customer owners and staff users.\n\nTo list all visible permissions, run a **GET** query against a list.\nResponse will contain a list of project users and their brief data.\n\nTo add a new user to the project, **POST** a new relationship to */api/project-permissions/* endpoint specifying\nproject, user and the role of the user ('admin' or 'manager'):\n\n.. code-block:: http\n\n    POST /api/project-permissions/ HTTP/1.1\n    Accept: application/json\n    Authorization: Token 95a688962bf68678fd4c8cec4d138ddd9493c93b\n    Host: example.com\n\n    {\n        \"project\": \"http://example.com/api/projects/6c9b01c251c24174a6691a1f894fae31/\",\n        \"role\": \"manager\",\n        \"user\": \"http://example.com/api/users/82cec6c8e0484e0ab1429412fe4194b7/\"\n    }",
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "role",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "user",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "user_url",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "username",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "full_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "native_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "o",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "project_url",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "Project permissions expresses connection of user to a project.",
        "operationId": "project-permissions_list",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "- Projects are connected to customers, whereas the project may belong to one customer only,\nand the customer may have\nmultiple projects.\n- Projects are connected to services, whereas the project may contain multiple services,\nand the service may belong to multiple projects.\n- Staff members can list all available projects of any customer and create new projects.\n- Customer owners can list all projects that belong to any of the customers they own.\nCustomer owners can also create projects for the customers they own.\n- Project administrators can list all the projects they are administrators in.\n- Project managers can list all the projects they are managers in.",
        "parameters": [
          {
            "schema": {
              "required": [
                "role",
                "project",
                "user"
              ],
              "type": "object",
              "properties": {
                "project": {
                  "type": "string",
                  "description": ""
                },
                "expiration_time": {
                  "type": "string",
                  "description": ""
                },
                "role": {
                  "type": "string",
                  "description": ""
                },
                "user": {
                  "type": "string",
                  "description": ""
                },
                "created_by": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "- Projects are connected to customers, whereas the project may belong to one customer only,",
        "operationId": "project-permissions_create",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/project-permissions/{id}/": {
      "get": {
        "description": "- Projects are connected to customers, whereas the project may belong to one customer only,\nand the customer may have\nmultiple projects.\n- Projects are connected to services, whereas the project may contain multiple services,\nand the service may belong to multiple projects.\n- Staff members can list all available projects of any customer and create new projects.\n- Customer owners can list all projects that belong to any of the customers they own.\nCustomer owners can also create projects for the customers they own.\n- Project administrators can list all the projects they are administrators in.\n- Project managers can list all the projects they are managers in.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "- Projects are connected to customers, whereas the project may belong to one customer only,",
        "operationId": "project-permissions_read",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "- Projects are connected to customers, whereas the project may belong to one customer only,\nand the customer may have\nmultiple projects.\n- Projects are connected to services, whereas the project may contain multiple services,\nand the service may belong to multiple projects.\n- Staff members can list all available projects of any customer and create new projects.\n- Customer owners can list all projects that belong to any of the customers they own.\nCustomer owners can also create projects for the customers they own.\n- Project administrators can list all the projects they are administrators in.\n- Project managers can list all the projects they are managers in.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "expiration_time": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "- Projects are connected to customers, whereas the project may belong to one customer only,",
        "operationId": "project-permissions_update",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "patch": {
        "description": "- Projects are connected to customers, whereas the project may belong to one customer only,\nand the customer may have\nmultiple projects.\n- Projects are connected to services, whereas the project may contain multiple services,\nand the service may belong to multiple projects.\n- Staff members can list all available projects of any customer and create new projects.\n- Customer owners can list all projects that belong to any of the customers they own.\nCustomer owners can also create projects for the customers they own.\n- Project administrators can list all the projects they are administrators in.\n- Project managers can list all the projects they are managers in.",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "expiration_time": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "- Projects are connected to customers, whereas the project may belong to one customer only,",
        "operationId": "project-permissions_partial_update",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "To remove a user from a project, delete corresponding connection (**url** field). Successful deletion\nwill return status code 204.\n\n.. code-block:: http\n\n    DELETE /api/project-permissions/42/ HTTP/1.1\n    Authorization: Token 95a688962bf68678fd4c8cec4d138ddd9493c93b\n    Host: example.com",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "id",
            "in": "path"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To remove a user from a project, delete corresponding connection (**url** field). Successful deletion",
        "operationId": "project-permissions_delete",
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/projects/": {
      "get": {
        "description": "To get a list of projects, run **GET** against */api/projects/* as authenticated user.\nHere you can also check actual value for project quotas and project usage\n\nNote that a user can only see connected projects:\n\n- projects that the user owns as a customer\n- projects where user has any role\n\nSupported logic filters:\n\n- ?can_manage - return a list of projects where current user is manager or a customer owner;\n- ?can_admin - return a list of projects where current user is admin;",
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_native_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "customer_abbreviation",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "description",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "created",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "o",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To get a list of projects, run **GET** against */api/projects/* as authenticated user.",
        "operationId": "projects_list",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "A new project can be created by users with staff privilege (is_staff=True) or customer owners.\nProject resource quota is optional. Example of a valid request:\n\n.. code-block:: http\n\n    POST /api/projects/ HTTP/1.1\n    Content-Type: application/json\n    Accept: application/json\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com\n\n    {\n        \"name\": \"Project A\",\n        \"customer\": \"http://example.com/api/customers/6c9b01c251c24174a6691a1f894fae31/\",\n    }",
        "parameters": [
          {
            "schema": {
              "required": [
                "name",
                "customer"
              ],
              "type": "object",
              "properties": {
                "customer": {
                  "type": "string",
                  "description": ""
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "A new project can be created by users with staff privilege (is_staff=True) or customer owners.",
        "operationId": "projects_create",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/projects/{uuid}/": {
      "get": {
        "description": "Optional `field` query parameter (can be list) allows to limit what fields are returned.\nFor example, given request /api/projects/<uuid>/?field=uuid&field=name you get response like this:\n\n.. code-block:: javascript\n\n    {\n        \"uuid\": \"90bcfe38b0124c9bbdadd617b5d739f5\",\n        \"name\": \"Default\"\n    }",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "Optional `field` query parameter (can be list) allows to limit what fields are returned.",
        "operationId": "projects_read",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name",
                "customer"
              ],
              "type": "object",
              "properties": {
                "customer": {
                  "type": "string",
                  "description": ""
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "projects_update"
      },
      "patch": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "customer": {
                  "type": "string",
                  "description": ""
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "projects_partial_update"
      },
      "delete": {
        "description": "Deletion of a project is done through sending a **DELETE** request to the project instance URI.\nPlease note, that if a project has connected instances, deletion request will fail with 409 response code.\n\nValid request example (token is user specific):\n\n.. code-block:: http\n\n    DELETE /api/projects/6c9b01c251c24174a6691a1f894fae31/ HTTP/1.1\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "Deletion of a project is done through sending a **DELETE** request to the project instance URI.",
        "operationId": "projects_delete",
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/resources/": {
      "get": {
        "description": "To get a list of supported resources' actions, run **OPTIONS** against\n*/api/<resource_url>/* as an authenticated user.\n\nIt is possible to filter and order by resource-specific fields, but this filters will be applied only to\nresources that support such filtering. For example it is possible to sort resource by ?o=ram, but SugarCRM crms\nwill ignore this ordering, because they do not support such option.\n\nFilter resources by type or category\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThere are two query argument to select resources by their type.\n\n- Specify explicitly list of resource types, for example:\n\n  /api/<resource_endpoint>/?resource_type=DigitalOcean.Droplet&resource_type=OpenStack.Instance\n\n- Specify category, one of vms, apps, private_clouds or storages for example:\n\n  /api/<resource_endpoint>/?category=vms\n\nFiltering by monitoring fields\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nResources may have SLA attached to it. Example rendering of SLA:\n\n.. code-block:: javascript\n\n    \"sla\": {\n        \"value\": 95.0\n        \"agreed_value\": 99.0,\n        \"period\": \"2016-03\"\n    }\n\nYou may filter or order resources by SLA. Default period is current year and month.\n\n- Example query for filtering list of resources by actual SLA:\n\n  /api/<resource_endpoint>/?actual_sla=90&period=2016-02\n\n- Warning! If resource does not have SLA attached to it, it is not included in ordered response.\n  Example query for ordering list of resources by actual SLA:\n\n  /api/<resource_endpoint>/?o=actual_sla&period=2016-02\n\nService list is displaying current SLAs for each of the items. By default,\nSLA period is set to the current month. To change the period pass it as a query argument:\n\n- ?period=YYYY-MM - return a list with SLAs for a given month\n- ?period=YYYY - return a list with SLAs for a given year\n\nIn all cases all currently running resources are returned, if SLA for the given period is\nnot known or not present, it will be shown as **null** in the response.\n\nResources may have monitoring items attached to it. Example rendering of monitoring items:\n\n.. code-block:: javascript\n\n    \"monitoring_items\": {\n       \"application_state\": 1\n    }\n\nYou may filter or order resources by monitoring item.\n\n- Example query for filtering list of resources by installation state:\n\n  /api/<resource_endpoint>/?monitoring__installation_state=1\n\n- Warning! If resource does not have monitoring item attached to it, it is not included in ordered response.\n  Example query for ordering list of resources by installation state:\n\n  /api/<resource_endpoint>/?o=monitoring__installation_state\n\nFiltering by tags\n^^^^^^^^^^^^^^^^^\n\nResource may have tags attached to it. Example of tags rendering:\n\n.. code-block:: javascript\n\n    \"tags\": [\n        \"license-os:centos7\",\n        \"os-family:linux\",\n        \"license-application:postgresql\",\n        \"support:premium\"\n    ]\n\nTags filtering:\n\n - ?tag=IaaS - filter by full tag name, using method OR. Can be list.\n - ?rtag=os-family:linux - filter by full tag name, using AND method. Can be list.\n - ?tag__license-os=centos7 - filter by tags with particular prefix.\n\nTags ordering:\n\n - ?o=tag__license-os - order by tag with particular prefix. Instances without given tag will not be returned.",
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To get a list of supported resources' actions, run **OPTIONS** against",
        "operationId": "resources_list",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/service-metadata/": {
      "get": {
        "description": "To get a list of supported service types, run **GET** against */api/service-metadata/* as an authenticated user.\nUse an endpoint from the returned list in order to create new service.",
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To get a list of supported service types, run **GET** against */api/service-metadata/* as an authenticated user.",
        "operationId": "service-metadata_list",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/service-settings/": {
      "get": {
        "description": "To get a list of service settings, run **GET** against */api/service-settings/* as an authenticated user.\nOnly settings owned by this user or shared settings will be listed.\n\nSupported filters are:\n\n- ?name=<text> - partial matching used for searching\n- ?type=<type> - choices: OpenStack, DigitalOcean, Amazon, JIRA, GitLab, Oracle\n- ?state=<state> - choices: New, Creation Scheduled, Creating, Sync Scheduled, Syncing, In Sync, Erred\n- ?shared=<bool> - allows to filter shared service settings",
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "type",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "state",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "shared",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "type",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "state",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "shared",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To get a list of service settings, run **GET** against */api/service-settings/* as an authenticated user.",
        "operationId": "service-settings_list",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/service-settings/{uuid}/": {
      "get": {
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "service-settings_read"
      },
      "put": {
        "description": "To update service settings, issue a **PUT** or **PATCH** to */api/service-settings/<uuid>/* as a customer owner.\nYou are allowed to change name and credentials only.\n\nExample of a request:\n\n.. code-block:: http\n\n    PATCH /api/service-settings/9079705c17d64e6aa0af2e619b0e0702/ HTTP/1.1\n    Content-Type: application/json\n    Accept: application/json\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com\n\n    {\n        \"username\": \"admin\",\n        \"password\": \"new_secret\"\n    }",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "description": ""
                },
                "backend_url": {
                  "type": "string",
                  "description": ""
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "certificate": {
                  "type": "string",
                  "description": ""
                },
                "token": {
                  "type": "string",
                  "description": ""
                },
                "scope": {
                  "type": "string",
                  "description": ""
                },
                "password": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To update service settings, issue a **PUT** or **PATCH** to */api/service-settings/<uuid>/* as a customer owner.",
        "operationId": "service-settings_update",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "patch": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "description": ""
                },
                "backend_url": {
                  "type": "string",
                  "description": ""
                },
                "name": {
                  "type": "string",
                  "description": ""
                },
                "certificate": {
                  "type": "string",
                  "description": ""
                },
                "token": {
                  "type": "string",
                  "description": ""
                },
                "scope": {
                  "type": "string",
                  "description": ""
                },
                "password": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "service-settings_partial_update"
      }
    },
    "/api/services/": {
      "get": {
        "description": "Filter services by type\n^^^^^^^^^^^^^^^^^^^^^^^\n\nIt is possible to filter services by their types. Example:\n\n  /api/services/?service_type=DigitalOcean&service_type=OpenStack",
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "Filter services by type",
        "operationId": "services_list",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/users/": {
      "get": {
        "description": "User list is available to all authenticated users. To get a list,\nissue authenticated **GET** request against */api/users/*.\n\nUser list supports several filters. All filters are set in HTTP query section.\nField filters are listed below. All of the filters apart from ?organization are\nusing case insensitive partial matching.\n\nSeveral custom filters are supported:\n\n- ?current - filters out user making a request. Useful for getting information about a currently logged in user.\n- ?civil_number=XXX - filters out users with a specified civil number\n- ?is_active=True|False - show only active (non-active) users\n- ?potential - shows users that have common connections to the customers and are potential collaborators.\n  Exclude staff users. Staff users can see all the customers.\n- ?potential_customer=<Customer UUID> - optionally filter potential users by customer UUID\n- ?potential_organization=<organization name> - optionally filter potential unconnected users by\n  their organization name\n  (deprecated, use `organization plugin <http://nodeconductor-organization.readthedocs.org/en/stable/>`_ instead)\n- ?organization_claimed - show only users with a non-empty organization\n  (deprecated, use `organization plugin <http://nodeconductor-organization.readthedocs.org/en/stable/>`_ instead)\n\nThe user can be created either through automated process on login with SAML token, or through a REST call by a user\nwith staff privilege.\n\nExample of a creation request is below.\n\n.. code-block:: http\n\n    POST /api/users/ HTTP/1.1\n    Content-Type: application/json\n    Accept: application/json\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com\n\n    {\n        \"username\": \"sample-user\",\n        \"full_name\": \"full name\",\n        \"native_name\": \"taisnimi\",\n        \"job_title\": \"senior cleaning manager\",\n        \"email\": \"example@example.com\",\n        \"civil_number\": \"12121212\",\n        \"phone_number\": \"\",\n        \"description\": \"\",\n        \"organization\": \"\",\n    }\n\nNB! Username field is case-insensitive. So \"John\" and \"john\" will be treated as the same user.",
        "parameters": [
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "full_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "native_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "organization",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "organization_approved",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "email",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "phone_number",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "description",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "job_title",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "username",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "civil_number",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "is_active",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "registration_method",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "o",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "full_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "native_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "organization",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "organization_approved",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "email",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "phone_number",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "description",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "job_title",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "username",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "civil_number",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "is_active",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "registration_method",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "o",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "full_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "native_name",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "organization",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "organization_approved",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "email",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "phone_number",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "description",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "job_title",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "username",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "civil_number",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "is_active",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "registration_method",
            "in": "query"
          },
          {
            "description": "",
            "required": false,
            "type": "string",
            "name": "o",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "User list is available to all authenticated users. To get a list,",
        "operationId": "users_list",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "schema": {
              "required": [
                "username",
                "email"
              ],
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "description": "Required. 30 characters or fewer. Letters, numbers and @/./+/-/_ characters"
                },
                "phone_number": {
                  "type": "string",
                  "description": ""
                },
                "full_name": {
                  "type": "string",
                  "description": ""
                },
                "preferred_language": {
                  "type": "string",
                  "description": ""
                },
                "competence": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                },
                "is_active": {
                  "type": "boolean",
                  "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts."
                },
                "agree_with_policy": {
                  "type": "boolean",
                  "description": "User must agree with the policy to register."
                },
                "is_support": {
                  "type": "boolean",
                  "description": "Designates whether the user is a global support user."
                },
                "is_staff": {
                  "type": "boolean",
                  "description": "Designates whether the user can log into this admin site."
                },
                "native_name": {
                  "type": "string",
                  "description": ""
                },
                "organization": {
                  "type": "string",
                  "description": ""
                },
                "email": {
                  "type": "string",
                  "description": ""
                },
                "job_title": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "users_create"
      }
    },
    "/api/users/{uuid}/": {
      "get": {
        "description": "User fields can be updated by account owner or user with staff privilege (is_staff=True).\nFollowing user fields can be updated:\n\n- organization (deprecated, use\n  `organization plugin <http://nodeconductor-organization.readthedocs.org/en/stable/>`_ instead)\n- full_name\n- native_name\n- job_title\n- phone_number\n- email\n\nCan be done by **PUT**ing a new data to the user URI, i.e. */api/users/<UUID>/* by staff user or account owner.\nValid request example (token is user specific):\n\n.. code-block:: http\n\n    PUT /api/users/e0c058d06864441fb4f1c40dee5dd4fd/ HTTP/1.1\n    Content-Type: application/json\n    Accept: application/json\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com\n\n    {\n        \"email\": \"example@example.com\",\n        \"organization\": \"Bells organization\",\n    }",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "User fields can be updated by account owner or user with staff privilege (is_staff=True).",
        "operationId": "users_read",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "email"
              ],
              "type": "object",
              "properties": {
                "phone_number": {
                  "type": "string",
                  "description": ""
                },
                "full_name": {
                  "type": "string",
                  "description": ""
                },
                "preferred_language": {
                  "type": "string",
                  "description": ""
                },
                "competence": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                },
                "is_active": {
                  "type": "boolean",
                  "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts."
                },
                "agree_with_policy": {
                  "type": "boolean",
                  "description": "User must agree with the policy to register."
                },
                "is_support": {
                  "type": "boolean",
                  "description": "Designates whether the user is a global support user."
                },
                "is_staff": {
                  "type": "boolean",
                  "description": "Designates whether the user can log into this admin site."
                },
                "native_name": {
                  "type": "string",
                  "description": ""
                },
                "organization": {
                  "type": "string",
                  "description": ""
                },
                "email": {
                  "type": "string",
                  "description": ""
                },
                "job_title": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "users_update"
      },
      "patch": {
        "tags": [
          "api"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "type": "object",
              "properties": {
                "phone_number": {
                  "type": "string",
                  "description": ""
                },
                "full_name": {
                  "type": "string",
                  "description": ""
                },
                "preferred_language": {
                  "type": "string",
                  "description": ""
                },
                "competence": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                },
                "is_active": {
                  "type": "boolean",
                  "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts."
                },
                "agree_with_policy": {
                  "type": "boolean",
                  "description": "User must agree with the policy to register."
                },
                "is_support": {
                  "type": "boolean",
                  "description": "Designates whether the user is a global support user."
                },
                "is_staff": {
                  "type": "boolean",
                  "description": "Designates whether the user can log into this admin site."
                },
                "native_name": {
                  "type": "string",
                  "description": ""
                },
                "organization": {
                  "type": "string",
                  "description": ""
                },
                "email": {
                  "type": "string",
                  "description": ""
                },
                "job_title": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "operationId": "users_partial_update"
      },
      "delete": {
        "tags": [
          "api"
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "operationId": "users_delete"
      }
    },
    "/api/users/{uuid}/password/": {
      "post": {
        "description": "To change a user password, submit a **POST** request to the user's RPC URL, specifying new password\nby staff user or account owner.\n\nPassword is expected to be at least 7 symbols long and contain at least one number\nand at least one lower or upper case.\n\nExample of a valid request:\n\n.. code-block:: http\n\n    POST /api/users/e0c058d06864441fb4f1c40dee5dd4fd/password/ HTTP/1.1\n    Content-Type: application/json\n    Accept: application/json\n    Authorization: Token c84d653b9ec92c6cbac41c706593e66f567a7fa4\n    Host: example.com\n\n    {\n        \"password\": \"nQvqHzeP123\",\n    }",
        "parameters": [
          {
            "description": "",
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "schema": {
              "required": [
                "username",
                "email"
              ],
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "description": "Required. 30 characters or fewer. Letters, numbers and @/./+/-/_ characters"
                },
                "phone_number": {
                  "type": "string",
                  "description": ""
                },
                "full_name": {
                  "type": "string",
                  "description": ""
                },
                "preferred_language": {
                  "type": "string",
                  "description": ""
                },
                "competence": {
                  "type": "string",
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": ""
                },
                "is_active": {
                  "type": "boolean",
                  "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts."
                },
                "agree_with_policy": {
                  "type": "boolean",
                  "description": "User must agree with the policy to register."
                },
                "is_support": {
                  "type": "boolean",
                  "description": "Designates whether the user is a global support user."
                },
                "is_staff": {
                  "type": "boolean",
                  "description": "Designates whether the user can log into this admin site."
                },
                "native_name": {
                  "type": "string",
                  "description": ""
                },
                "organization": {
                  "type": "string",
                  "description": ""
                },
                "email": {
                  "type": "string",
                  "description": ""
                },
                "job_title": {
                  "type": "string",
                  "description": ""
                }
              }
            },
            "name": "data",
            "in": "body"
          }
        ],
        "tags": [
          "api"
        ],
        "summary": "To change a user password, submit a **POST** request to the user's RPC URL, specifying new password",
        "operationId": "users_password",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/version/": {
      "get": {
        "description": "Retrieve version of the application",
        "parameters": [],
        "tags": [
          "api"
        ],
        "summary": "Retrieve version of the application",
        "operationId": "version_list",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "basic": {
      "type": "basic"
    }
  }
}
