{
    "swagger": "2.0",
    "info": {
        "version": "2.0.0",
        "title": "SUNFISH Blockchain API - Alert propagation",
        "contact": {
            "name": "Md Sadek Ferdous",
            "email": "S.Ferdous@soton.ac.uk"
        }
    },
    "basePath": "/api/alert",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/store": {
            "post": {
                "description": "This endpoint is used to store alerts.\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body in JSON",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/store-body"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The response body for a successful response.",
                        "schema": {
                            "$ref": "#/definitions/store-response"
                        }
                    },
                    "400": {
                        "description": "Invalid request, required parameter(s) missing."
                    },
                    "401": {
                        "description": "The operation is not allowed (unauthorised access, the token is invalid, etc.)."
                    }
                }
            }
        },
        "/read": {
            "post": {
                "description": "This endpoint is used to retrieve the stored alert using the index.\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body in JSON",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/read-body"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The response body for a successful response.",
                        "schema": {
                            "$ref": "#/definitions/read-response"
                        }
                    },
                    "400": {
                        "description": "Invalid request, required parameter(s) missing."
                    },
                    "401": {
                        "description": "The operation is not allowed (unauthorised access, the token is invalid, etc.)."
                    }
                }
            }
        }
    },
    "definitions": {
        "store-body": {
            "type": "object",
            "description": "HTTP body defining the store operation for the /store endpoint.",
            "required": [
                "loggerID",
                "timeStamp",
                "token",
                "alertID",
                "alertType",
                "alertSource",
                "alert"
            ],
            "properties": {
                "loggerID": {
                    "type": "string",
                    "description": "Identifier of the requesting entity."
                },
                "timeStamp": {
                    "type": "string",
                    "description": "The timestamp in the following format - \"2006-01-02 15:04:05\"."
                },
                "token": {
                    "type": "string",
                    "description": "A crypto token to validate if the entity is allowed to perform the requested operation."
                },
                "alertID": {
                    "type": "string",
                    "description": "Identifier of the newly created alert."
                },
                "alertType": {
                    "type": "string",
                    "enum": [
                        "POLICY_VIOLATION",
                        "REQ_RESP_DISCREPANCY",
                        "AUDIT_ALERT"
                    ],
                    "description": "POLICY_VIOLATION alert, created by the PVE, corresponds to an alert regarding a policy violation. REQ_RESP_DISCREPANCY alert, created by the PVE, corresponds to an alert regarding a discrepancy of an XACML request/response. AUDIT_ALERT alert, created by the FSA, corresponds to an alert which is generated after performing offline analysis over the access control logs."
                },
                "alertSource": {
                    "type": "string",
                    "enum": [
                        "PVE",
                        "FSA"
                    ],
                    "description": "Refences the entity which has generated the alert."
                },
                "alert": {
                    "type": "string",
                    "description": "Base64 encoded alert."
                }
            }
        },
        "read-body": {
            "type": "object",
            "description": "HTTP body defining the read operation for the /read endpoint.",
            "required": [
                "loggerID",
                "token",
                "index"
            ],
            "properties": {
                "loggerID": {
                    "type": "string",
                    "description": "Identifier of the requesting entity."
                },
                "token": {
                    "type": "string",
                    "description": "A crypto token to validate if the entity is allowed to perform the requested operation."
                },
                "index": {
                    "type": "integer",
                    "description": "Index of the requested data as provided during the store operation."
                }
            }
        },
        "store-response": {
            "type": "object",
            "description": "HTTP response for a successful store operation.",
            "required": [
                "index"
            ],
            "properties": {
                "index": {
                    "type": "integer",
                    "description": "index of the stored alert."
                }
            }
        },
        "read-response": {
            "type": "object",
            "description": "HTTP response for a successful read operation.",
            "required": [
                "loggerID",
                "timeStamp",
                "token",
                "alertID",
                "alertType",
                "alertSource",
                "alert"
            ],
            "properties": {
                "loggerID": {
                    "type": "string",
                    "description": "Identifier of the requesting entity."
                },
                "timeStamp": {
                    "type": "string",
                    "description": "The timestamp in the following format - \"2006-01-02 15:04:05\"."
                },
                "token": {
                    "type": "string",
                    "description": "A crypto token to validate if the entity is allowed to perform the requested operation."
                },
                "alertID": {
                    "type": "string",
                    "description": "Identifier of the newly created alert."
                },
                "alertType": {
                    "type": "string",
                    "enum": [
                        "POLICY_VIOLATION",
                        "REQ_RESP_DISCREPANCY",
                        "AUDIT_ALERT"
                    ],
                    "description": "POLICY_VIOLATION alert, created by the PVE, corresponds to an alert regarding a policy violation. REQ_RESP_DISCREPANCY alert, created by the PVE, corresponds to an alert regarding a discrepancy of an XACML request/response. AUDIT_ALERT alert, created by the FSA, corresponds to an alert which is generated after performing offline analysis over the access control logs."
                },
                "alertSource": {
                    "type": "string",
                    "enum": [
                        "PVE",
                        "FSA"
                    ],
                    "description": "Refences the entity which has generated the alert."
                },
                "alert": {
                    "type": "string",
                    "description": "Base64 encoded alert."
                }
            }
        }
    }
}