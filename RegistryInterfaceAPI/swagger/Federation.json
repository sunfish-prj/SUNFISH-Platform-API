{
    "swagger": "2.0",
    "info": {
        "version": "2.0.0",
        "title": "SUNFISH Blockchain API - Federation",
        "contact": {
            "name": "Md Sadek Ferdous",
            "email": "S.Ferdous@soton.ac.uk"
        }
    },
    "basePath": "/api/fed",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/create": {
            "post": {
                "description": "This endpoint is used to create a new federation.\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body in JSON",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create-body"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The response body for a successful response.",
                        "schema": {
                            "$ref": "#/definitions/create-response"
                        }
                    },
                    "400": {
                        "description": "Invalid request, required parameter(s) missing."
                    },
                    "401": {
                        "description": "The operation is not allowed (unauthorised access, the token is invalid, etc.)."
                    }
                }
            }
        },
        "/add": {
            "post": {
                "description": "This endpoint is used to add a new member in the federation.\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body in JSON",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/add-body"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The response body for a successful response.",
                        "schema": {
                            "$ref": "#/definitions/add-response"
                        }
                    },
                    "400": {
                        "description": "Invalid request, required parameter(s) missing."
                    },
                    "401": {
                        "description": "The operation is not allowed (unauthorised access, the token is invalid, etc.)."
                    }
                }
            }
        },
        "/remove": {
            "post": {
                "description": "This endpoint is used to remove a member from the federation. \n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body in JSON",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/remove-body"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The response body for a successful response.",
                        "schema": {
                            "$ref": "#/definitions/remove-response"
                        }
                    },
                    "400": {
                        "description": "Invalid request, required parameter(s) missing."
                    },
                    "401": {
                        "description": "The operation is not allowed (unauthorised access, the token is invalid, etc.).          "
                    }
                }
            }
        }
    },
    "definitions": {
        "create-body": {
            "type": "object",
            "description": "HTTP body defining the create operation for the /create endpoint.",
            "required": [
                "requestorID",
                "timeStamp",
                "token",
                "id",
                "name"
            ],
            "properties": {
                "requestorID": {
                    "type": "string",
                    "description": "Identifier of the requesting entity."
                },
                "timeStamp": {
                    "type": "string",
                    "description": "The timestamp in the following format - \"2006-01-02 15:04:05\"."
                },
                "token": {
                    "type": "string",
                    "description": "A crypto token to validate if the entity is allowed to perform the requested operation."
                },
                "id": {
                    "type": "string",
                    "description": "An unique identifier for the new federation."
                },
                "name": {
                    "type": "string",
                    "description": "The name for the new federation"
                }
            }
        },
        "add-body": {
            "type": "object",
            "description": "HTTP body defining the read operation for the /read endpoint.",
            "required": [
                "requestorID",
                "token",
                "timeStamp",
                "newMember",
		"id"
            ],
            "properties": {
                "requestorID": {
                    "type": "string",
                    "description": "Identifier of the requesting entity."
                },
                "token": {
                    "type": "string",
                    "description": "A crypto token to validate if the entity is allowed to perform the requested operation."
                },
                "timeStamp": {
                    "type": "string",
                    "description": "The timestamp in the following format - \"2006-01-02 15:04:05\"."
                },
                "newMember": {
                    "type": "string",
                    "description": "The name for the new member"
                },
                "id": {
                    "type": "string",
                    "description": "The id of the federation in which to add the new member."
                }
            }
        },
        "remove-body": {
            "type": "object",
            "description": "HTTP body defining the remove operation for the /remove endpoint.",
            "required": [
                "requestorID",
                "token",
                "timeStamp",
                "newMember",
		"id"
            ],
            "properties": {
                "requestorID": {
                    "type": "string",
                    "description": "Identifier of the requesting entity."
                },
                "token": {
                    "type": "string",
                    "description": "A crypto token to validate if the entity is allowed to perform the requested operation."
                },
                "timeStamp": {
                    "type": "string",
                    "description": "The timestamp in the following format - \"2006-01-02 15:04:05\"."
                },
                "newMember": {
                    "type": "string",
                    "description": "The name for the member."
                },
                "id": {
                    "type": "string",
                    "description": "The id of the federation from where the new member will be removed."
                }
            }
        },
        "create-response": {
            "type": "object",
            "description": "HTTP response for a successful create operation.",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "a message in JSON format signifying that the new federation has been created."
                }
            }
        },
        "add-response": {
            "type": "object",
            "description": "HTTP response for a successful add operation.",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "a message in JSON format signifying that the new member has been added in the federation."
                }
            }
        },
        "remove-response": {
            "type": "object",
            "description": "HTTP response for a successful remove operation.",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "a message in JSON format signifying that the member has been removed from the federation."
                }
            }
        }
    }
}
