{
    "swagger": "2.0",
    "info": {
        "version": "2.0.0",
        "title": "SUNFISH Blockchain API - SLA Metrics",
        "contact": {
            "name": "Md Sadek Ferdous",
            "email": "S.Ferdous@soton.ac.uk"
        }
    },
    "basePath": "/api/sla",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/store": {
            "post": {
                "description": "This endpoint is used to store performance metrics.\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body in JSON",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/store-body"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The response body for a successful response.",
                        "schema": {
                            "$ref": "#/definitions/store-response"
                        }
                    },
                    "400": {
                        "description": "Invalid request, required parameter(s) missing."
                    },
                    "401": {
                        "description": "The operation is not allowed (unauthorised access, the token is invalid, etc.)."
                    }
                }
            }
        },
        "/read": {
            "post": {
                "description": "This endpoint is used to retrieve the stored metrics using the index.\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body in JSON",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/read-body"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The response body for a successful response.",
                        "schema": {
                            "$ref": "#/definitions/read-response"
                        }
                    },
                    "400": {
                        "description": "Invalid request, required parameter(s) missing."
                    },
                    "401": {
                        "description": "The operation is not allowed (unauthorised access, the token is invalid, etc.)."
                    }
                }
            }
        }
    },
    "definitions": {
        "store-body": {
            "type": "object",
            "description": "HTTP body defining the store operation for the /store endpoint.",
            "required": [
                "loggerID",
                "timeStamp",
                "token",
                "availability",
                "responseTime",
                "CPUPower",
                "diskSpace",
                "memorySize",
                "bandwidth",
                "throughput",
                "connections",
                "elasticity"
            ],
            "properties": {
                "loggerID": {
                    "type": "string",
                    "description": "Identifier of the requesting entity."
                },
                "timeStamp": {
                    "type": "string",
                    "description": "The timestamp in the following format - \"2006-01-02 15:04:05\"."
                },
                "token": {
                    "type": "string",
                    "description": "A crypto token to validate if the entity is allowed to perform the requested operation."
                },
                "availability": {
                    "type": "string",
                    "description": "The percentage availability of the cloud member resources for a billing cycle."
                },
                "responseTime": {
                    "type": "string",
                    "description": "Exact time (seconds) between stimulus to the cloud service and corresponding service's response. The percentage a service manages to respond within the defined response time limit for a billing cycle."
                },
                "CPUPower": {
                    "type": "string",
                    "description": "Max. no. of processing power (Hertz) provided by CSP to customer to process his data."
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Max. no. of available space (PetaBytes) provided by CSP to customer to store his data."
                },
                "memorySize": {
                    "type": "string",
                    "description": "Max. no. of information (GigaBytes) the cloud service is able to hold for the customer to read/write his data."
                },
                "bandwidth": {
                    "type": "string",
                    "description": "Amount of outbound data transfers (GigaByte/month), customers will be given the ability to customize the cloud services, and corresponding SLAs, according to the demand and usage of the services."
                },
                "throughput": {
                    "type": "string",
                    "description": "Min. no. of requests that can be processed by the cloud service in a stated time period (GigaBytes/sec)."
                },
                "connections": {
                    "type": "string",
                    "description": "Max. no. of simultaneous connections."
                },
                "elasticity": {
                    "type": "string",
                    "description": "Quickly de/provision resources, dynamically adjust the amount of resources allocated to an instance of a service (seconds to react)."
                }
            }
        },
        "read-body": {
            "type": "object",
            "description": "HTTP body defining the read operation for the /read endpoint.",
            "required": [
                "loggerID",
                "token",
                "index"
            ],
            "properties": {
                "loggerID": {
                    "type": "string",
                    "description": "Identifier of the requesting entity."
                },
                "token": {
                    "type": "string",
                    "description": "A crypto token to validate if the entity is allowed to perform the requested operation."
                },
                "index": {
                    "type": "integer",
                    "description": "Index of the requested data as provided during the store operation."
                }
            }
        },
        "store-response": {
            "type": "object",
            "description": "HTTP response for a successful store operation.",
            "required": [
                "index"
            ],
            "properties": {
                "index": {
                    "type": "integer",
                    "description": "index of the stored metrics."
                }
            }
        },
        "read-response": {
            "type": "object",
            "description": "HTTP response for a successful read operation.",
            "required": [
                "loggerID",
                "timeStamp",
                "token",
                "availability",
                "responseTime",
                "CPUPower",
                "diskSpace",
                "memorySize",
                "bandwidth",
                "throughput",
                "connections",
                "elasticity"
            ],
            "properties": {
                "loggerID": {
                    "type": "string",
                    "description": "Identifier of the requesting entity."
                },
                "timeStamp": {
                    "type": "string",
                    "description": "The timestamp in the following format - \"2006-01-02 15:04:05\"."
                },
                "token": {
                    "type": "string",
                    "description": "A crypto token to validate if the entity is allowed to perform the requested operation."
                },
                "availability": {
                    "type": "string",
                    "description": "The percentage availability of the cloud member resources for a billing cycle."
                },
                "responseTime": {
                    "type": "string",
                    "description": "Exact time (seconds) between stimulus to the cloud service and corresponding service's response. The percentage a service manages to respond within the defined response time limit for a billing cycle."
                },
                "CPUPower": {
                    "type": "string",
                    "description": "Max. no. of processing power (Hertz) provided by CSP to customer to process his data."
                },
                "diskSpace": {
                    "type": "string",
                    "description": "Max. no. of available space (PetaBytes) provided by CSP to customer to store his data."
                },
                "memorySize": {
                    "type": "string",
                    "description": "Max. no. of information (GigaBytes) the cloud service is able to hold for the customer to read/write his data."
                },
                "bandwidth": {
                    "type": "string",
                    "description": "Amount of outbound data transfers (GigaByte/month), customers will be given the ability to customize the cloud services, and corresponding SLAs, according to the demand and usage of the services."
                },
                "throughput": {
                    "type": "string",
                    "description": "Min. no. of requests that can be processed by the cloud service in a stated time period (GigaBytes/sec)."
                },
                "connections": {
                    "type": "string",
                    "description": "Max. no. of simultaneous connections."
                },
                "elasticity": {
                    "type": "string",
                    "description": "Quickly de/provision resources, dynamically adjust the amount of resources allocated to an instance of a service (seconds to react)."
                }
            }
        }
    }
}