{
    "swagger": "2.0",
    "info": {
        "version": "2.0.0",
        "title": "SUNFISH Blockchain API - Storage of access control policies",
        "contact": {
            "name": "Md Sadek Ferdous",
            "email": "S.Ferdous@soton.ac.uk"
        }
    },
    "basePath": "/api/prp/policy",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/store": {
            "post": {
                "description": "This endpoint is used to store a new policy.\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body in JSON",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/store-body"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The response body for a successful response.",
                        "schema": {
                            "$ref": "#/definitions/response"
                        }
                    },
                    "400": {
                        "description": "Invalid request, required parameter(s) missing."
                    },
                    "401": {
                        "description": "The operation is not allowed (unauthorised access, the token is invalid, etc.)."
                    },
                    "409": {
                        "description": "The operation is not allowed as the policy already exists."
                    }
                }
            }
        },
        "/read": {
            "post": {
                "description": "This endpoint is used to retrieve a policy by an id.\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body in JSON",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/read-body"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The response body for a successful response.",
                        "schema": {
                            "$ref": "#/definitions/read-response"
                        }
                    },
                    "400": {
                        "description": "Invalid request, required parameter(s) missing"
                    },
                    "401": {
                        "description": "The operation is not allowed (unauthorised access, the token is invalid, etc.)."
                    },
                    "404": {
                        "description": "The requested policy is not found."
                    }
                }
            }
        },
        "/service": {
            "post": {
                "description": "This endpoint is used to retrieve a set of policies using a service identifier.\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body in JSON",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service-body"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The response body for a successful response.",
                        "schema": {
                            "$ref": "#/definitions/service-response"
                        }
                    },
                    "400": {
                        "description": "Invalid request, required parameter(s) missing"
                    },
                    "401": {
                        "description": "The operation is not allowed (unauthorised access, the token is invalid, etc.)."
                    }
                }
            }
        },
        "/update": {
            "post": {
                "description": "This endpoint is used to update a policy by an id.\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body in JSON",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update-body"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The response body for a successful response.",
                        "schema": {
                            "$ref": "#/definitions/response"
                        }
                    },
                    "400": {
                        "description": "Invalid request, required parameter(s) missing."
                    },
                    "401": {
                        "description": "The operation is not allowed (unauthorised access, the token is invalid, etc.)."
                    },
                    "404": {
                        "description": "The respective policy is not found.    "
                    }
                }
            }
        },
        "/delete": {
            "post": {
                "description": "This endpoint is used to remove a policy by an id.\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body in JSON",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delete-body"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The response body for a successful response.",
                        "schema": {
                            "$ref": "#/definitions/response"
                        }
                    },
                    "400": {
                        "description": "Invalid request, required parameter(s) missing"
                    },
                    "401": {
                        "description": "The operation is not allowed (unauthorised access, the token is invalid, etc.)."
                    },
                    "404": {
                        "description": "The respective policy is not found.    "
                    }
                }
            }
        }
    },
    "definitions": {
        "store-body": {
            "type": "object",
            "description": "HTTP body defining the store operation for the /store endpoint.",
            "required": [
                "requestorID",
                "token",
                "policy",
                "expirationTime",
                "id"
            ],
            "properties": {
                "requestorID": {
                    "type": "string",
                    "description": "Identifier of the requesting entity."
                },
                "token": {
                    "type": "string",
                    "description": "A crypto token to validate if the entity is allowed to perform the requested operation."
                },
                "policy": {
                    "type": "string",
                    "description": "Base64-encoded policy data."
                },
                "expirationTime": {
                    "type": "string",
                    "description": "Specifies the expiration time of the policy in milli-seconds starting from midnight, January 1, 1970 UTC. After this time the policy set must not be used."
                },
                "id": {
                    "type": "string",
                    "description": "The identifer for the policy."
                },
                "serviceID": {
                    "type": "string",
                    "description": "The identifier of the service this policy applies to."
                },
                "policyType": {
                    "type": "string",
                    "description": "The type of the policy."
                }
            }
        },
        "read-body": {
            "type": "object",
            "description": "HTTP body defining the read operation for the /read endpoint",
            "required": [
                "requestorID",
                "token",
                "id"
            ],
            "properties": {
                "requestorID": {
                    "type": "string",
                    "description": "Identifier of the requesting entity."
                },
                "token": {
                    "type": "string",
                    "description": "A crypto token to validate if the entity is allowed to perform the requested operation."
                },
                "id": {
                    "type": "string",
                    "description": "The identifer for the policy."
                }
            }
        },
        "service-body": {
            "type": "object",
            "description": "HTTP body defining the read operation for the /read endpoint",
            "required": [
                "requestorID",
                "token",
                "serviceID",
                "policyType"
            ],
            "properties": {
                "requestorID": {
                    "type": "string",
                    "description": "Identifier of the requesting entity."
                },
                "token": {
                    "type": "string",
                    "description": "A crypto token to validate if the entity is allowed to perform the requested operation."
                },
                "serviceID": {
                    "type": "string",
                    "description": "Specifies the service identifier to be used to retrieve the set of policies belonging to that identifier."
                },
                "policyType": {
                    "type": "string",
                    "description": "The type of the policy."
                }
            }
        },
        "update-body": {
            "type": "object",
            "description": "HTTP body defining the read operation for the /read endpoint.",
            "required": [
                "requestorID",
                "token",
                "id",
                "policy"
            ],
            "properties": {
                "requestorID": {
                    "type": "string",
                    "description": "Identifier of the requesting entity."
                },
                "token": {
                    "type": "string",
                    "description": "A crypto token to validate if the entity is allowed to perform the requested operation."
                },
                "id": {
                    "type": "string",
                    "description": "Specifies the id of the policy to be updated in the response."
                },
                "policy": {
                    "type": "string",
                    "description": "Base64-encoded policy data."
                }
            }
        },
        "delete-body": {
            "type": "object",
            "description": "HTTP body defining the delete operation for the /read endpoint.",
            "required": [
                "requestorID",
                "token",
                "id"
            ],
            "properties": {
                "requestorID": {
                    "type": "string",
                    "description": "Identifier of the requesting entity."
                },
                "token": {
                    "type": "string",
                    "description": "A crypto token to validate if the entity is allowed to perform the requested operation."
                },
                "id": {
                    "type": "string",
                    "description": "Specifies the id of the policy to be updated in the response."
                }
            }
        },
        "response": {
            "type": "object",
            "description": "HTTP response for a successful operation",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "A message signifying that the operation has been successfully performed."
                }
            }
        },
        "read-response": {
            "type": "object",
            "description": "HTTP response for a successful read operation",
            "required": [
                "policy",
                "expirationTime"
            ],
            "properties": {
                "policy": {
                    "type": "string",
                    "description": "BASE64-enocded data of the requested policy."
                },
                "expirationTime": {
                    "type": "string",
                    "description": "Specifies the expiration time of the policy set in milliseconds starting from midnight, January 1, 1970 UTC. After this time the policy set must not be used."
                }
            }
        },
        "service-response": {
            "type": "object",
            "description": "HTTP response containing the list of policies for the service.",
            "required": [
                "list"
            ],
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Specifies the id of the policy."
                            },
                            "policy": {
                                "type": "string",
                                "description": "BASE64-enocded data of the policy."
                            }
                        },
                        "required": [
                            "id",
                            "policy"
                        ]
                    }
                }
            }
        }
    }
}
