{
    "swagger": "2.0",
    "info": {
        "version": "2.0.0",
        "title": "SUNFISH Blockchain API - Data anoymisation",
        "contact": {
            "name": "Md Sadek Ferdous",
            "email": "S.Ferdous@soton.ac.uk"
        }
    },
    "basePath": "/api/anonymisation",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/register": {
            "post": {
                "description": "This endpoint is used to register a data-sharing event.\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body in JSON",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/register-body"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The response body for a successful response.",
                        "schema": {
                            "$ref": "#/definitions/register-response"
                        }
                    },
                    "400": {
                        "description": "Invalid request, required parameter(s) missing."
                    },
                    "401": {
                        "description": "The operation is not allowed (unauthorised access, the token is invalid, etc.)."
                    }
                }
            }
        },
        "/read": {
            "post": {
                "description": "This endpoint is used to retrieve a data-sharing event given the name data consumer.\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Body in JSON",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/read-body"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The response body for a successful response.",
                        "schema": {
                            "$ref": "#/definitions/read-response"
                        }
                    },
                    "400": {
                        "description": "Invalid request, required parameter(s) missing"
                    },
                    "401": {
                        "description": "The operation is not allowed (unauthorised access, the token is invalid, etc.)."
                    }
                }
            }
        }
    },
    "definitions": {
        "register-body": {
            "type": "object",
            "description": "HTTP body defining the register operation for the /register endpoint.",
            "required": [
                "requestorID",
                "token",
                "data_provider",
                "data_consumer",
                "timeStamp",
                "dataID"
            ],
            "properties": {
                "requestorID": {
                    "type": "string",
                    "description": "Identifier of the requesting entity."
                },
                "token": {
                    "type": "string",
                    "description": "A crypto token to validate if the entity is allowed to perform the requested operation."
                },
                "data_provider": {
                    "type": "string",
                    "description": "The name of the data provider who shares a dataset."
                },
                "data_consumer": {
                    "type": "string",
                    "description": "The name of the data consumer who receives a dataset."
                },
                "timeStamp": {
                    "type": "string",
                    "description": "The timestamp in the following format - \"2006-01-02 15:04:05\""
                },
                "dataID": {
                    "type": "string",
                    "description": "Identifier of the shared dataset."
                }
            }
        },
        "read-body": {
            "type": "object",
            "description": "HTTP body defining the read operation for the /read endpoint",
            "required": [
                "requestorID",
                "token",
                "data_consumer"
            ],
            "properties": {
                "requestorID": {
                    "type": "string",
                    "description": "Identifier of the requesting entity."
                },
                "token": {
                    "type": "string",
                    "description": "A crypto token to validate if the entity is allowed to perform the requested operation."
                },
                "data_consumer": {
                    "type": "string",
                    "description": "The name of the data consumer who receives a dataset."
                }
            }
        },
        "register-response": {
            "type": "object",
            "description": "HTTP response for a successful register operation",
            "required": [
                "index"
            ],
            "properties": {
                "index": {
                    "type": "integer",
                    "description": "The index of the data sharing event."
                }
            }
        },
        "read-response": {
            "type": "object",
            "description": "HTTP response for a successful read operation",
            "required": [
                "data_provider",
                "data_consumer",
                "timeStamp",
                "dataID"
            ],
            "properties": {
                "data_provider": {
                    "type": "string",
                    "description": "The name of the data provider who shares a dataset."
                },
                "data_consumer": {
                    "type": "string",
                    "description": "The name of the data consumer who receives a dataset."
                },
                "timeStamp": {
                    "type": "string",
                    "description": "The timestamp in the following format - \"2006-01-02 15:04:05\""
                },
                "dataID": {
                    "type": "string",
                    "description": "Identifier of the shared dataset."
                }
            }
        }
    }
}